<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <!-- ========= -->
    <!-- Bottombar -->
    <!-- ========= -->
    <include name="Bottombar">
        <control type="group">
            <include>Animation_Bottombar</include>
            <include>Bottombar_Infobar</include>
            <control type="group">
                <bottom>0</bottom>
                <left>0</left>
                <right>0</right>
                <height>420</height>
                <include>Bottombar_Texture</include>
                <include>Bottombar_Content</include>
            </control>
            <control type="group">
                <visible>$EXP[Expression_ShowWeatherWidget]</visible>
                <visible>Window.IsVisible(home)</visible>
                <include condition="Window.IsVisible(home)">Weather</include>
            </control>
            <control type="group">
                <visible>$EXP[Expression_ShowSystemInfoWidget]</visible>
                <visible>Window.IsVisible(home)</visible>
                <include condition="Window.IsVisible(home)">Object_SystemInfoWidget</include>
            </control>
        </control> 
    </include>

    <include name="Bottombar_BusySpinner">
        <control type="group">
            <visible>Window.IsVisible(home)</visible>
            <animation effect="fade" start="100" end="0" time="0" condition="![Container(301).IsUpdating + Integer.IsEqual(Container(301).NumItems,0)]" reversible="false">Conditional</animation>
            <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout" condition="[Container(301).IsUpdating + Integer.IsEqual(Container(301).NumItems,0)]" reversible="false">Conditional</animation>
            <include content="Defs_BusySpinner">
                <param name="label" value="$LOCALIZE[31138]..."/>
            </include>
        </control>
    </include>

    <include name="Bottombar_Content">
        <control type="group">
            <include>Animation_Bottombar_Right</include>
            <include>Animation_FadeInOut_Conditional</include>
            <visible>[!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogMusicInfo.xml) + !Window.IsVisible(DialogAddonInfo.xml) + !Window.IsVisible(DialogPVRInfo.xml)] | Window.IsVisible(script-script.extendedinfo-VideoList.xml)</visible>
            <include>Bottombar_Views</include>
            <include condition="!Window.IsVisible(script-script.extendedinfo-VideoList.xml)">Object_AlphabetStrip</include>
        </control>
        <control type="group">
            <include>Animation_FadeInOut_Conditional</include>
            <visible>Window.IsVisible(MyWeather.xml)</visible>
            <include>Weather</include>
        </control>
        <control type="group">
            <include>Animation_FadeInOut_Conditional</include>
            <visible>[!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogMusicInfo.xml) + !Window.IsVisible(DialogAddonInfo.xml) + !Window.IsVisible(DialogPVRInfo.xml)] | Window.IsVisible(script-script.extendedinfo-VideoList.xml)</visible>
            <visible>!$EXP[Expression_ShowWeatherWidget] + !$EXP[Expression_ShowSystemInfoWidget]</visible>
            <include condition="!Window.IsVisible(script-script.extendedinfo-VideoList.xml)">Bottombar_BusySpinner</include>
        </control>
    </include>

    <include name="Bottombar_Views">
        <control type="group">
            <left>view_left</left>
            <include condition="Window.IsVisible(Home) + !Window.IsVisible(script-script.extendedinfo-VideoList.xml)">View_Home_Widget</include>
            <include condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml)">View_ExtendedInfo</include>
            <include condition="Window.IsVisible(EventLog.xml)">View_EventLog</include>
            <include condition="Window.IsVisible(1101)">View_Hub_1101</include>
            <include condition="Window.IsVisible(1102)">View_Hub_1102</include>
            <include condition="Window.IsVisible(1103)">View_Hub_1103</include>
            <include condition="Window.IsVisible(1104)">View_Hub_1104</include>
            <include condition="Window.IsVisible(1105)">View_Hub_1105</include>
            <include condition="Window.IsVisible(1106)">View_Hub_1106</include>
            <include condition="Window.IsVisible(1107)">View_Hub_1107</include>
            <include condition="Window.IsVisible(1108)">View_Hub_1108</include>
            <include condition="Window.IsVisible(1109)">View_Hub_1109</include>
            <include condition="Window.IsVisible(1111)">View_AddonsPage</include>
            <include condition="[Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRSearch.xml)]">View_PVR</include>
            <include condition="!Window.IsVisible(Home) + !Window.IsVisible(script-script.extendedinfo-VideoList.xml) + !Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + !Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + !Window.IsVisible(EventLog.xml) + !Window.IsVisible(MyPVRChannels.xml) + !Window.IsVisible(MyPVRTimers.xml) + !Window.IsVisible(MyPVRRecordings.xml) + !Window.IsVisible(MyPVRSearch.xml) + !Window.IsVisible(1101) + !Window.IsVisible(1102) + !Window.IsVisible(1103) + !Window.IsVisible(1104) + !Window.IsVisible(1105) + !Window.IsVisible(1106) + !Window.IsVisible(1107) + !Window.IsVisible(1108) + !Window.IsVisible(1109) + !Window.IsVisible(1111)">View_Library</include>
        </control>
    </include>

    <include name="Bottombar_Infobar">
        <control type="group">
            <bottom>-500</bottom>
            <left>0</left>
            <right>0</right>
            <height>1020</height>
            <include>Bottombar_Infobar_Texture</include>
            <include>Animation_Bottombar_Infobar</include>
            <control type="group">
                <height>100</height>
                <top>0</top>
                <include>Animation_Bottombar_Text</include>
                <control type="group">
                    <visible>!Skin.HasSetting(UseColorFlags)</visible>
                    <include content="Object_Flags" condition="Window.IsVisible(Home)">
                        <param name="container" value="Container(301)." />
                        <param name="directory" value="monochrome" />
                    </include>
                    <include content="Object_Flags" condition="!Window.IsVisible(Home)">
                        <param name="container" value="" />
                        <param name="directory" value="monochrome" />
                    </include>
                </control>
                <control type="group">
                    <visible>Skin.HasSetting(UseColorFlags)</visible>
                    <include content="Object_Flags" condition="Window.IsVisible(Home)">
                        <param name="container" value="Container(301)." />
                        <param name="directory" value="color" />
                    </include>
                    <include content="Object_Flags" condition="!Window.IsVisible(Home)">
                        <param name="container" value="" />
                        <param name="directory" value="color" />
                    </include>
                </control>
            </control>
            <control type="group">
                <include>Animation_Bottombar_Text</include>
                <include condition="!Window.IsVisible(MyPVRGuide.xml) + !Window.IsVisible(Home)">Bottombar_StandardInfo</include>
                <include condition="Window.IsVisible(Home)">Bottombar_HomeInfo</include>
                <include condition="Window.IsVisible(MyPVRGuide.xml)">Bottombar_PVRGuideInfo</include>
            </control>
        </control>
    </include>

    <!-- ============== -->
    <!-- Plain Info Bar -->
    <!-- ============== -->
    <include name="Bottombar_Plain">
        <control type="group">
            <include>Bottombar_Infobar</include>
            <control type="group">
                <bottom>0</bottom>
                <left>0</left>
                <right>0</right>
                <height>420</height>
                <include>Bottombar_Texture</include>
            </control>
        </control>
    </include>

    <!-- ================== -->
    <!-- Info Panel Content -->
    <!-- ================== -->
    <include name="Bottombar_PVRGuideInfo">
        <control type="group">
            <left>30</left>
            <right>30</right>
            <height>100</height>
            <top>0</top>
            <control type="grouplist">
                <orientation>horizontal</orientation>
                <itemgap>20</itemgap>
                <top>0</top>
                <bottom>33%</bottom>
                <usecontrolcoords>true</usecontrolcoords>
                <control type="label">
                    <width>auto</width>
                    <scroll>true</scroll>
                    <font>font_infobar_mainlabel</font>
                    <textcolor>panel_fg_100</textcolor>
                    <label>$INFO[ListItem.Title]</label>
                    <aligny>center</aligny>
                </control>
                <control type="label">
                    <top>7</top>
                    <width>auto</width>
                    <font>font_infobar_sublabel</font>
                    <textcolor>panel_fg_100</textcolor>
                    <label>[COLOR=panel_fg_70]$INFO[ListItem.ChannelNumberLabel,,. ]$INFO[ListItem.ChannelName,,  •  ][/COLOR]$INFO[ListItem.StartTime]$INFO[ListItem.EndTime, - ,  [COLOR=panel_fg_70]•[/COLOR]  ][COLOR=$VAR[ColorHighlight]]$INFO[ListItem.Genre][/COLOR]</label>
                    <aligny>center</aligny>
                    <visible>Player.HasVideo + Skin.HasSetting(global.showvideo)</visible>
                </control>
            </control>
            <control type="label">
                <left>0</left>
                <right>0</right>
                <font>font_infobar_sublabel</font>
                <textcolor>panel_fg_100</textcolor>
                <label>[COLOR=panel_fg_70]$INFO[ListItem.ChannelNumberLabel,,. ]$INFO[ListItem.ChannelName,,  •  ][/COLOR]$INFO[ListItem.StartTime]$INFO[ListItem.EndTime, - ,  [COLOR=panel_fg_70]•[/COLOR]  ][COLOR=$VAR[ColorHighlight]]$INFO[ListItem.Genre][/COLOR]</label>
                <aligny>center</aligny>
                <bottom>0</bottom>
                <top>33%</top>
                <visible>!Player.HasVideo | !Skin.HasSetting(global.showvideo)</visible>
            </control>
            <control type="label">
                <left>0</left>
                <right>0</right>
                <font>font_infobar_sublabel</font>
                <textcolor>panel_fg_100</textcolor>
                <label>$INFO[ListItem.Plot]</label>
                <aligny>center</aligny>
                <bottom>0</bottom>
                <top>33%</top>
                <visible>Player.HasVideo + Skin.HasSetting(global.showvideo)</visible>
            </control>
        </control>
        <control type="group">
            <control type="group">
                <top>108</top>
                <height>130</height>
                <left>30</left>
                <right>30</right>
                <control type="textbox" id="9399">
                    <label>$VAR[Label_Plot]</label>
                    <include condition="Skin.HasSetting(EnableTransparency)">Animation_Bottombar_Infobar_Plot</include>
                    <font>font_plotbox</font>
                    <textcolor>panel_fg_100</textcolor>
                </control>
            </control>
        </control>
    </include>

    <include name="Bottombar_StandardInfo_Title">
        <control type="group">
            <left>info_left</left>
            <right>578</right>
            <height>100</height>
            <top>0</top>
            <visible>!String.IsEmpty(ListItem.VideoCodec) | !String.IsEmpty(ListItem.VideoAspect) | !String.IsEmpty(ListItem.AudioCodec) | !String.IsEmpty(ListItem.AudioChannels) | !String.IsEmpty(Container(301).ListItem.VideoCodec) | !String.IsEmpty(Container(301).ListItem.VideoAspect) | !String.IsEmpty(Container(301).ListItem.AudioCodec) | !String.IsEmpty(Container(301).ListItem.AudioChannels)</visible>
            <visible>Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | !Window.IsVisible(DialogVideoInfo.xml) | String.IsEmpty(Window(Home).Property(FocusedList))</visible>
            <include>Animation_FadeOut</include>
            <control type="label">
                <left>0</left>
                <right>0</right>
                <scroll>true</scroll>
                <scrollsuffix>. </scrollsuffix>
                <font>font_infobar_mainlabel</font>
                <textcolor>panel_fg_100</textcolor>
                <label>$VAR[Label_Title]</label>
                <scroll>true</scroll>
                <aligny>center</aligny>
                <top>0</top>
                <bottom>33%</bottom>
            </control>
            <control type="label">
                <left>0</left>
                <right>0</right>
                <font>font_infobar_sublabel</font>
                <textcolor>panel_fg_100</textcolor>
                <label>$VAR[Label_InfoLine]</label>
                <scroll>true</scroll>
                <aligny>center</aligny>
                <bottom>0</bottom>
                <top>33%</top>
            </control>
        </control>
        <control type="group">
            <left>info_left</left>
            <right>30</right>
            <height>100</height>
            <top>0</top>
            <visible>String.IsEmpty(ListItem.VideoCodec) + String.IsEmpty(ListItem.VideoAspect) + String.IsEmpty(ListItem.AudioCodec) + String.IsEmpty(ListItem.AudioChannels) + String.IsEmpty(Container(301).ListItem.VideoCodec) + String.IsEmpty(Container(301).ListItem.VideoAspect) + String.IsEmpty(Container(301).ListItem.AudioCodec) + String.IsEmpty(Container(301).ListItem.AudioChannels)</visible>
            <visible>Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | !Window.IsVisible(DialogVideoInfo.xml) | String.IsEmpty(Window(Home).Property(FocusedList))</visible>
            <include>Animation_FadeOut</include>
            <control type="label">
                <left>0</left>
                <right>0</right>
                <scroll>true</scroll>
                <scrollsuffix>. </scrollsuffix>
                <font>font_infobar_mainlabel</font>
                <textcolor>panel_fg_100</textcolor>
                <scroll>true</scroll>
                <label>$VAR[Label_Title]</label>
                <aligny>center</aligny>
                <top>0</top>
                <bottom>33%</bottom>
            </control>
            <control type="label">
                <left>0</left>
                <right>0</right>
                <font>font_infobar_sublabel</font>
                <textcolor>panel_fg_100</textcolor>
                <label>$VAR[Label_InfoLine]</label>
                <scroll>true</scroll>
                <aligny>center</aligny>
                <bottom>0</bottom>
                <top>33%</top>
            </control>
        </control>
    </include>

    <include name="Bottombar_StandardInfo">
        <include>Bottombar_StandardInfo_Title</include>
        <control type="group">
            <top>108</top>
            <height>130</height>
            <left>info_left</left>
            <right>30</right>
            <control type="textbox" id="9399">
                <label>$VAR[Label_Plot]</label>
                <include condition="Skin.HasSetting(EnableTransparency)">Animation_Bottombar_Infobar_Plot</include>
                <font>font_plotbox</font>
                <textcolor>panel_fg_100</textcolor>
            </control>
        </control>
    </include>

    <include name="Bottombar_HomeInfo">
        <control type="group">
            <visible>[Control.IsVisible(301) + ![Container(301).IsUpdating + Integer.IsEqual(Container(301).NumItems,0)] + !Integer.IsEqual(Container(301).NumItems,0)] | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)</visible>
            <visible>!$EXP[Expression_ShowWeatherWidget] + !$EXP[Expression_ShowSystemInfoWidget]</visible>
            <control type="group">
                <left>info_left</left>
                <right>578</right>
                <height>100</height>
                <top>0</top>
                <visible>!String.IsEmpty(ListItem.VideoCodec) | !String.IsEmpty(ListItem.VideoAspect) | !String.IsEmpty(ListItem.AudioCodec) | !String.IsEmpty(ListItem.AudioChannels) | !String.IsEmpty(Container(301).ListItem.VideoCodec) | !String.IsEmpty(Container(301).ListItem.VideoAspect) | !String.IsEmpty(Container(301).ListItem.AudioCodec) | !String.IsEmpty(Container(301).ListItem.AudioChannels)</visible>
                <visible>Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | !Window.IsVisible(DialogVideoInfo.xml) | String.IsEmpty(Window(Home).Property(FocusedList)) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)</visible>
                <control type="label">
                    <left>0</left>
                    <right>0</right>
                    <font>font_infobar_mainlabel</font>
                    <textcolor>panel_fg_100</textcolor>
                    <label>$VAR[Label_Widget_Title]</label>
                    <scroll>true</scroll>
                    <aligny>center</aligny>
                    <top>0</top>
                    <bottom>33%</bottom>
                </control>
                <control type="label">
                    <left>0</left>
                    <right>0</right>
                    <font>font_infobar_sublabel</font>
                    <textcolor>panel_fg_100</textcolor>
                    <label>$VAR[Label_Widget_InfoLine]</label>
                    <scroll>true</scroll>
                    <aligny>center</aligny>
                    <top>33%</top>
                    <bottom>0</bottom>
                </control>
            </control>
            <control type="group">
                <left>info_left</left>
                <right>30</right>
                <height>100</height>
                <top>0</top>
                <visible>String.IsEmpty(ListItem.VideoCodec) + String.IsEmpty(ListItem.VideoAspect) + String.IsEmpty(ListItem.AudioCodec) + String.IsEmpty(ListItem.AudioChannels) + String.IsEmpty(Container(301).ListItem.VideoCodec) + String.IsEmpty(Container(301).ListItem.VideoAspect) + String.IsEmpty(Container(301).ListItem.AudioCodec) + String.IsEmpty(Container(301).ListItem.AudioChannels)</visible>
                <visible>Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | !Window.IsVisible(DialogVideoInfo.xml) | String.IsEmpty(Window(Home).Property(FocusedList)) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)</visible>
                <control type="label">
                    <left>0</left>
                    <right>0</right>
                    <font>font_infobar_mainlabel</font>
                    <textcolor>panel_fg_100</textcolor>
                    <label>$VAR[Label_Widget_Title]</label>
                    <scroll>true</scroll>
                    <aligny>center</aligny>
                    <top>0</top>
                    <bottom>33%</bottom>
                </control>
                <control type="label">
                    <left>0</left>
                    <right>0</right>
                    <font>font_infobar_sublabel</font>
                    <textcolor>panel_fg_100</textcolor>
                    <label>$VAR[Label_Widget_InfoLine]</label>
                    <scroll>true</scroll>
                    <aligny>center</aligny>
                    <top>33%</top>
                    <bottom>0</bottom>
                </control>
            </control>
            <control type="group">
                <top>108</top>
                <height>130</height>
                <left>info_left</left>
                <right>30</right>
                <control type="textbox" id="9399">
                    <label>$VAR[Label_Widget_Plot]</label>
                    <include condition="Skin.HasSetting(EnableTransparency)">Animation_Bottombar_Infobar_Plot</include>
                    <font>font_plotbox</font>
                    <textcolor>panel_fg_100</textcolor>
                </control>
            </control>
        </control>
    </include>

    <!-- ======== -->
    <!-- Textures -->
    <!-- ======== -->
    <include name="Bottombar_Texture">
        <control type="image">
            <top>-24</top>
            <height>24</height>
            <width>100%</width>
            <texture flipy="true">common/shadow-line-24px.png</texture>
        </control>
        <control type="image">
            <bottom>0</bottom>
            <top>0</top>
            <texture>common/gradient-solid.png</texture>
            <animation effect="fade" start="100" end="66" condition="Skin.HasSetting(EnableTransparency)">Conditional</animation>
        </control>
        <control type="image">
            <top>0</top>
            <height>1</height>
            <texture colordiffuse="highlight_bottombar">common/white.png</texture>
        </control>
    </include>

    <include name="Bottombar_Infobar_Texture">
        <control type="image">
            <top>-12</top>
            <height>12</height>
            <width>100%</width>
            <texture flipy="true">common/shadow-line-24px.png</texture>
        </control>
        <control type="image">
            <bottom>0</bottom>
            <top>0</top>
            <texture colordiffuse="panel_bg">common/white.png</texture>
        </control>
    </include>
</includes>