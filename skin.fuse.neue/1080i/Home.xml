<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<window id="0">
    <defaultcontrol>300</defaultcontrol>
    <onload>SetProperty(SkinHelper.WidgetContainer,301)</onload>
    <onunload>ClearProperty(SkinHelper.WidgetContainer)</onunload>
    <onload>Skin.SetString(SkinHelper.RandomFanartDelay,6)</onload>
    <onload>RunScript(script.skinshortcuts,type=buildxml&amp;mainmenuID=300&amp;group=mainmenu|x1101|x1102|x1103|x1104|x1105|x1106|x1107|x1108|x1109|powermenu)</onload>
    <onload condition="!Skin.HasSetting(SkinHelper.EnablePVRThumbs)">Skin.SetBool(SkinHelper.EnablePVRThumbs)</onload>
    <onload condition="!Skin.HasSetting(SkinHelper.EnableMusicArt)">Skin.SetBool(SkinHelper.EnableMusicArt)</onload>

    <onload condition="Window.Previous(VideoFullScreen.xml) | Window.Previous(MusicVisualisation.xml)">AlarmClock(Set300,SetFocus(300),00:00,silent)</onload>
    <onload>ClearProperty(HomeFocus,Home)</onload>
    <include>Defs_SetStartWindow</include>
    <controls>
        <include>Global_Background</include>
        <include>Bottombar</include>
        <include>Topbar</include>
        
        <control type="group">
            <visible>Control.IsVisible(301)</visible>
            <visible>![Container(301).IsUpdating + Integer.IsEqual(Container(301).NumItems,0)] + !Integer.IsEqual(Container(301).NumItems,0)</visible>
            <animation type="Visible" reversible="false">
                <effect type="fade" start="0" end="100" time="200" delay="0" />
            </animation>
            <include>Animation_Bottombar</include>
            <animation type="WindowOpen" reversible="false" condition="Window.Previous(MusicVisualisation.xml) | Window.Previous(VideoFullScreen.xml) | Window.Previous(Startup.xml)">
                <effect type="slide" start="-534" end="0" time="400" delay="200" tween="quadratic" easing="out" />
                <effect type="fade" start="0" end="100" time="200" delay="200" />
            </animation>
            <control type="group">
                <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
                <visible>!Window.IsVisible(DialogMusicInfo.xml)</visible>
                <visible>$EXP[Expression_ShowBigPosterHome]</visible>
                <visible>!$EXP[Expression_ShowWeatherWidget]</visible>
                <visible>!$EXP[Expression_ShowSystemInfoWidget]</visible>
                <include content="Object_BigPoster">
                    <param name="container" value="Container(301)." />
                    <param name="visible" value="true" />
                    <param name="variable" value="$VAR[Image_Poster_Home]" />
                    <param name="discart" value="false" />
                </include>
            </control>
            <control type="group">
                <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
                <visible>!Window.IsVisible(DialogMusicInfo.xml)</visible>
                <visible>!$EXP[Expression_ShowBigPosterHome]</visible>
                <visible>!$EXP[Expression_ShowWeatherWidget]</visible>
                <visible>!$EXP[Expression_ShowSystemInfoWidget]</visible>
                <include content="Object_BigPoster">
                    <param name="container" value="Container(301)." />
                    <param name="visible" value="true" />
                    <param name="variable" value="$VAR[Image_Poster_Home]" />
                    <param name="height" value="504" />
                    <param name="discart" value="false" />
                </include>
            </control>
        </control>

        <!-- Next Up Recording -->
        <control type="group">
            <include>Dialog_Notification_Group</include>
            <animation effect="slide" end="0,100" tween="cubic" time="300" condition="Window.IsActive(DialogVolumeBar.xml) + !Player.Muted">Conditional</animation>
            <animation effect="slide" end="0,100" tween="cubic" time="300" condition="Window.IsActive(DialogNotification.xml) | Window.IsActive(DialogExtendedProgressBar.xml)">Conditional</animation>
            <include>Animation_Notification_Follow</include>
            <visible>Pvr.IsRecording | Pvr.HasTimer</visible>
            <visible>!Skin.HasSetting(home.pvrnotification)</visible>
            <control type="group">
                <control type="image">
                    <include>Dialog_Notification_Icon</include>
                    <aspectratio>keep</aspectratio>
                    <texture colordiffuse="panel_fg_100">kaitoast/info.png</texture>
                </control>
                <control type="label">
                    <label>$VAR[Label_NextRecordingHeader]</label>
                    <include>Dialog_Notification_MainLabel</include>
                </control>
                <control type="label">
                    <textcolor>panel_fg_100</textcolor>
                    <label>$VAR[Label_NextRecording]</label>
                    <include>Dialog_Notification_SubLabel</include>
                </control>
            </control>
        </control>

        <include>Statusbar</include>
        
    </controls>
</window>
