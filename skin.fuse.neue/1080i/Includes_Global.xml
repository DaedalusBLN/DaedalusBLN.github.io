<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="Global_Overlay">
        <control type="image">
            <include>Animation_FadeIn</include>
            <include condition="!Window.IsVisible(DialogButtonMenu.xml)">Animation_FadeOut</include>
            <include>Dimensions_Fullscreen</include>
            <texture border="2">common/black-back.png</texture>
        </control>
    </include>

    <include name="Global_Videowindow">
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <texture colordiffuse="Background">common/white.png</texture>
        </control>
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <texture colordiffuse="ff000000">common/white.png</texture>
            <visible>Player.HasVideo + Skin.HasSetting(global.showvideo)</visible>
        </control>
        <control type="videowindow">
            <visible>Skin.HasSetting(global.showvideo)</visible>
            <include>Dimensions_Fullscreen</include>
        </control>
    </include>
    
    <include name="Global_Visualisation">
        <control type="group">
            <visible>Player.HasAudio + Skin.HasSetting(global.showvisualisation)</visible>
            <control type="visualisation">
                <visible>Skin.HasSetting(ArtistSlideShow.Disabled) | !System.HasAddon(script.artistslideshow)</visible>
                <description>visualisation</description>
                <include>Dimensions_Fullscreen</include>
            </control>
            <control type="multiimage">
                <aspectratio>scale</aspectratio>
                <include>Dimensions_Fullscreen</include>
                <timeperimage>10000</timeperimage>
                <randomize>true</randomize>
                <fadetime>600</fadetime>
                <loop>true</loop>
                <imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
                <visible>System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled)</visible>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
            </control>
        </control>
    </include>
    
    <include name="Global_Background">
        <include>Global_Videowindow</include>
        <include>Global_Visualisation</include>
        <control type="group">
            <animation effect="slide" start="0" end="0,-48" time="600" tween="sine" easing="inout" reversible="true" condition="$EXP[Expression_ShowTopbar] + !$EXP[Expression_LowerBottomBar]">Conditional</animation>
            <include>Animation_FadeInOut_Conditional</include>
            
            <control type="multiimage" description="Fanart">
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
                <include>Dimensions_Fullscreen</include>
                <fadetime>600</fadetime>
                <timeperimage>12000</timeperimage>
                <randomize>true</randomize>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[Global_Background_Image]</imagepath>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
            </control>
            <control type="image" description="Fanart Fallback always">
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <include>Dimensions_Fullscreen</include>
                <visible>!Window.IsVisible(home) + Skin.HasSetting(global.hidefanart) + !String.IsEmpty(Skin.String(fanart.fallback))</visible>
                <aspectratio>scale</aspectratio>
                <texture background="true">$INFO[Skin.String(fanart.fallback)]</texture>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
            </control>
            <control type="image">
                <width>400</width>
                <aspectratio align="right" aligny="top">keep</aspectratio>
                <top>30</top>
                <right>30</right>
                <height>155</height>
                <fadetime>300</fadetime>
                <texture background="true">$VAR[Image_ClearLogo]</texture>
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
                <visible>!ListItem.IsCollection + !Container(301).ListItem.IsCollection</visible>
                <visible>!Skin.HasSetting(HideClearLogo)</visible>
                <visible>[!$EXP[Expression_ShowWeatherWidget] + !$EXP[Expression_ShowSystemInfoWidget]] | !Window.IsVisible(Home)</visible>
                <visible>String.IsEmpty(Window(Home).Property(FocusedList))</visible>
                <animation effect="fade" start="100" end="0" time="450" easing="out" tween="sine" reversible="true" condition="Control.HasFocus(300) | Control.HasFocus(302) | [!Control.HasFocus(301) + Window.IsVisible(Home) + Skin.HasSetting(home.dontshowfanart)]">Conditional</animation>
                <animation effect="slide" start="0" end="0,80" condition="Skin.HasSetting(ShowTopbar)">Conditional</animation>
                <animation effect="zoom" start="100" end="75" center="auto" condition="Skin.HasSetting(ShowTopbar)">Conditional</animation>
            </control>
            
        </control>

        <include content="Global_Background_InfoFanart" condition="!Window.IsVisible(Home)">
            <param name="container" value="" />
        </include>
        <include content="Global_Background_InfoFanart" condition="Window.IsVisible(Home)">
            <param name="container" value="Container(301)." />
        </include>
        
    </include>

    <include name="Global_Background_InfoFanart">
        <param name="container" default="" />
        <definition>
            <control type="group">
                <visible>Skin.HasSetting(FanartDisplayInfo)</visible>
                <visible>!String.IsEmpty(Window(Home).Property(HideBottomBar))</visible>
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <include>Animation_FadeIn_Delay</include>
                <include>Animation_FadeOut</include>   
                <control type="image">
                    <bottom>0</bottom>
                    <top>0</top>
                    <texture>common/dim-gradient.png</texture>
                </control>
                <control type="group">
                    <control type="group">
                        <width>480</width>
                        <height>720</height>
                        <left>SidePad</left>
                        <bottom>SidePad</bottom>
                        <control type="image">
                            <centerbottom>0</centerbottom>
                            <width>100%</width>
                            <height>48</height>
                            <aspectratio>stretch</aspectratio>
                            <texture border="24,12,24,12">diffuse/shadowspot.png</texture>
                            <visible>!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(poster))</visible>
                        </control>
                        <control type="image">
                            <include>Defs_Shadow_Opaque</include>
                            <aspectratio aligny="bottom">keep</aspectratio>
                            <texture>$INFO[$PARAM[container]ListItem.Art(poster)]</texture>
                            <visible>String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster))</visible>
                        </control>
                        <control type="image">
                            <include>Defs_Shadow_Opaque</include>
                            <texture>$INFO[$PARAM[container]ListItem.Art(tvshow.poster)]</texture>
                            <visible>!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster))</visible>
                        </control>
                    </control>
                    <control type="group" description="info">
                        <left>560</left>
                        <right>SidePad</right>
                        <top>310</top>
                        <bottom>SidePad</bottom>
                        <control type="grouplist">
                            <top>200</top>
                            <left>40</left>
                            <usecontrolcoords>true</usecontrolcoords>
                            <bottom>0</bottom>
                            <right>0</right>
                            <align>bottom</align>
                            <control type="label">
                                <aligny>top</aligny>
                                <height>95</height>
                                <width>100%</width>
                                <font>font_musicvis_title</font>
                                <label>$INFO[$PARAM[container]ListItem.Title]</label>
                                <visible>!Container.Content(episodes)</visible>
                            </control>
                            <control type="label">
                                <aligny>top</aligny>
                                <height>95</height>
                                <width>100%</width>
                                <font>font_musicvis_title</font>
                                <label>$INFO[$PARAM[container]ListItem.TvShowTitle]</label>
                                <visible>Container.Content(episodes)</visible>
                            </control>
                            <control type="grouplist">
                                <itemgap>0</itemgap>
                                <orientation>horizontal</orientation>
                                <height>70</height>
                                <width>100%</width>
                                <visible>String.IsEmpty($PARAM[container]ListItem.VideoCodec) + String.IsEmpty($PARAM[container]ListItem.VideoAspect) + String.IsEmpty($PARAM[container]ListItem.AudioCodec) + String.IsEmpty($PARAM[container]ListItem.AudioChannels)</visible>
                                <control type="label">
                                    <aligny>top</aligny>
                                    <width>80</width>
                                    <label>31281</label>
                                    <font>font_musicvis_album</font>
                                    <animation effect="fade" start="100" end="50" condition="true">Conditional</animation>
                                    <visible>!Container.Content(episodes)</visible>
                                    <visible>!String.IsEmpty($PARAM[container]ListItem.Director)</visible>
                                </control>
                                <control type="label">
                                    <aligny>top</aligny>
                                    <width>auto</width>
                                    <font>font_musicvis_album</font>
                                    <label>$INFO[$PARAM[container]ListItem.Director]</label>
                                    <visible>!Container.Content(episodes)</visible>
                                    <visible>!String.IsEmpty($PARAM[container]ListItem.Director)</visible>
                                </control>
                                <control type="label">
                                    <aligny>top</aligny>
                                    <width>auto</width>
                                    <label>$INFO[$PARAM[container]ListItem.Season,,x]$INFO[$PARAM[container]ListItem.Episode,,. ]</label>
                                    <font>font_musicvis_album</font>
                                    <animation effect="fade" start="100" end="50" condition="true">Conditional</animation>
                                    <visible>Container.Content(episodes)</visible>
                                </control>
                                <control type="label">
                                    <aligny>top</aligny>
                                    <width>auto</width>
                                    <font>font_musicvis_album</font>
                                    <label>$INFO[$PARAM[container]ListItem.Title]</label>
                                    <visible>Container.Content(episodes)</visible>
                                </control>
                                <control type="label">
                                    <aligny>center</aligny>
                                    <height>80</height>
                                    <width>auto</width>
                                    <font>font_videoplayer_premiered</font>
                                    <label>$INFO[$PARAM[container]ListItem.Premiered,  (,)]</label>
                                    <visible>Container.Content(episodes)</visible>
                                </control>
                            </control>
                            <control type="grouplist">
                                <itemgap>0</itemgap>
                                <orientation>horizontal</orientation>
                                <height>70</height>
                                <width>720</width>
                                <visible>!String.IsEmpty($PARAM[container]ListItem.VideoCodec) | !String.IsEmpty($PARAM[container]ListItem.VideoAspect) | !String.IsEmpty($PARAM[container]ListItem.AudioCodec) | !String.IsEmpty($PARAM[container]ListItem.AudioChannels)</visible>
                                <control type="label">
                                    <aligny>top</aligny>
                                    <width>80</width>
                                    <label>31281</label>
                                    <font>font_musicvis_album</font>
                                    <animation effect="fade" start="100" end="50" condition="true">Conditional</animation>
                                    <visible>!Container.Content(episodes)</visible>
                                    <visible>!String.IsEmpty($PARAM[container]ListItem.Director)</visible>
                                </control>
                                <control type="label">
                                    <aligny>top</aligny>
                                    <width>640</width>
                                    <font>font_musicvis_album</font>
                                    <scroll>true</scroll>
                                    <label>$INFO[$PARAM[container]ListItem.Director]</label>
                                    <visible>!Container.Content(episodes)</visible>
                                    <visible>!String.IsEmpty($PARAM[container]ListItem.Director)</visible>
                                </control>
                                <control type="label">
                                    <aligny>top</aligny>
                                    <width>auto</width>
                                    <label>$INFO[$PARAM[container]ListItem.Season,,x]$INFO[$PARAM[container]ListItem.Episode,,. ]</label>
                                    <font>font_musicvis_album</font>
                                    <animation effect="fade" start="100" end="50" condition="true">Conditional</animation>
                                    <visible>Container.Content(episodes)</visible>
                                </control>
                                <control type="label">
                                    <aligny>top</aligny>
                                    <width>auto</width>
                                    <font>font_musicvis_album</font>
                                    <label>$INFO[$PARAM[container]ListItem.Title]</label>
                                    <visible>Container.Content(episodes)</visible>
                                </control>
                                <control type="label">
                                    <aligny>center</aligny>
                                    <height>80</height>
                                    <width>auto</width>
                                    <font>font_videoplayer_premiered</font>
                                    <label>$INFO[$PARAM[container]ListItem.Premiered,  (,)]</label>
                                    <visible>Container.Content(episodes)</visible>
                                </control>
                            </control>
                            <control type="group">
                                <top>-75</top>
                                <height>70</height>
                                <right>-30</right>
                                <left>30</left>
                                <visible>!Skin.HasSetting(UseColorFlags)</visible>
                                <include content="Object_Flags">
                                    <param name="source" value="$PARAM[container]ListItem." />
                                    <param name="align" value="right" />
                                    <param name="colordiffuse" value="main_fg_70" />
                                </include>
                            </control>
                            <control type="group">
                                <top>-75</top>
                                <height>70</height>
                                <right>-30</right>
                                <left>30</left>
                                <visible>Skin.HasSetting(UseColorFlags)</visible>
                                <include content="Object_Flags">
                                    <param name="source" value="$PARAM[container]ListItem." />
                                    <param name="directory" value="color" />
                                    <param name="align" value="right" />
                                </include>
                            </control>
                            <control type="textbox">
                                <aligny>top</aligny>
                                <height max="128">auto</height>
                                <width>100%</width>
                                <font>font_plotbox</font>
                                <label>$INFO[$PARAM[container]ListItem.Plot]</label>
                            </control>
                        </control>
                    </control>
                </control>
            </control>
        </definition>
    </include>

    <include name="Global_Background_Settings">
        <include>Global_Videowindow</include>
        <include>Global_Visualisation</include>
        <control type="group">
            <animation effect="fade" end="0" start="100" time="400" condition="![Window.Next(SettingsCategory.xml) | Window.Next(Settings.xml) | Window.Next(AddonBrowser.xml) | Window.Next(SkinSettings.xml) | Window.Next(MyWeather.xml) | Window.Next(SettingsSystemInfo.xml) | Window.Next(SettingsProfile.xml) | Window.Next(SettingsScreenCalibration.xml) | Window.Next(FileManager.xml)]">WindowClose</animation>
            <animation effect="fade" start="0" end="100" time="400" condition="![Window.Previous(SettingsCategory.xml) | Window.Previous(Settings.xml) | Window.Previous(AddonBrowser.xml) | Window.Previous(SkinSettings.xml) | Window.Previous(MyWeather.xml) | Window.Previous(SettingsSystemInfo.xml) | Window.Previous(SettingsProfile.xml) | Window.Previous(SettingsScreenCalibration.xml) | Window.Previous(FileManager.xml)]">WindowOpen</animation>
            <control type="multiimage" description="Fanart">
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
                <include>Dimensions_Fullscreen</include>
                <fadetime>0</fadetime>
                <timeperimage>12000</timeperimage>
                <randomize>true</randomize>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[Global_Background_Image]</imagepath>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
            </control>
            <control type="image" description="Fanart Fallback always">
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <include>Dimensions_Fullscreen</include>
                <visible>!Window.IsVisible(home) + Skin.HasSetting(global.hidefanart) + !String.IsEmpty(Skin.String(fanart.fallback))</visible>
                <aspectratio>scale</aspectratio>
                <texture background="true">$INFO[Skin.String(fanart.fallback)]</texture>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
            </control>
        </control>
    </include>

    <variable name="Global_Background_Image_NoFanart">
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Skin.String(home.slideshowpath)) + !String.IsEqual(Skin.String(home.slideshowpath),$LOCALIZE[8]) + [String.IsEmpty(Container(300).ListItem.Property(widget)) | [Container(301).IsUpdating + Integer.IsEqual(Container(301).NumItems,0)] |  Skin.HasSetting(home.dontshowfanart)]">$INFO[Skin.String(home.slideshowpath)]</value>
        <value condition="!String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value>special://skin/extras/backgrounds/default.jpg</value>
    </variable>

    <variable name="Global_Background_Image">
        <value condition="Skin.HasSetting(NoFanart)">$VAR[Global_Background_Image_NoFanart]</value>
        <!-- Extended Info -->
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),150) | Control.HasFocus(150)] + !String.IsEmpty(Container(150).ListItem.Art(fanart))">$INFO[Container(150).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),150) | Control.HasFocus(150)] + !String.IsEmpty(Container(150).ListItem.Art(fanart))">$INFO[Container(150).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),250) | Control.HasFocus(250)] + !String.IsEmpty(Container(250).ListItem.Art(fanart))">$INFO[Container(250).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),550) | Control.HasFocus(550)] + !String.IsEmpty(Container(550).ListItem.Art(fanart))">$INFO[Container(550).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + !String.IsEmpty(Window.Property(fanart_original))">$INFO[Window.Property(fanart_original)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + !String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)">special://skin/extras/backgrounds/default.jpg</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml) + !String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>

        <!-- DialogVideoInfo Director -->
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),9502) | Control.HasFocus(9502)] + !String.IsEmpty(Window(Home).Property(ListFanartContent))">$INFO[Window(Home).Property(ListFanartContent)]</value>
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),9502) | Control.HasFocus(9502)] + String.IsEmpty(Window(Home).Property(ListFanartContent)) + !String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),9502) | Control.HasFocus(9502)] + String.IsEmpty(Window(Home).Property(ListFanartContent))">special://skin/extras/backgrounds/default.jpg</value>

        <!-- Next Aired -->
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(200) | Control.HasFocus(8200)] + !String.IsEmpty(Container(200).ListItem.Property(Fanart))">$INFO[Container(200).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(201) | Control.HasFocus(8201)] + !String.IsEmpty(Container(201).ListItem.Property(Fanart))">$INFO[Container(201).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(202) | Control.HasFocus(8202)] + !String.IsEmpty(Container(202).ListItem.Property(Fanart))">$INFO[Container(202).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(203) | Control.HasFocus(8203)] + !String.IsEmpty(Container(203).ListItem.Property(Fanart))">$INFO[Container(203).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(204) | Control.HasFocus(8204)] + !String.IsEmpty(Container(204).ListItem.Property(Fanart))">$INFO[Container(204).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(205) | Control.HasFocus(8205)] + !String.IsEmpty(Container(205).ListItem.Property(Fanart))">$INFO[Container(205).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(206) | Control.HasFocus(8206)] + !String.IsEmpty(Container(206).ListItem.Property(Fanart))">$INFO[Container(206).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(207) | Control.HasFocus(8207)] + !String.IsEmpty(Container(207).ListItem.Property(Fanart))">$INFO[Container(207).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(208) | Control.HasFocus(8208)] + !String.IsEmpty(Container(208).ListItem.Property(Fanart))">$INFO[Container(208).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(209) | Control.HasFocus(8209)] + !String.IsEmpty(Container(209).ListItem.Property(Fanart))">$INFO[Container(209).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(210) | Control.HasFocus(8210)] + !String.IsEmpty(Container(210).ListItem.Property(Fanart))">$INFO[Container(210).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(211) | Control.HasFocus(8211)] + !String.IsEmpty(Container(211).ListItem.Property(Fanart))">$INFO[Container(211).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(212) | Control.HasFocus(8212)] + !String.IsEmpty(Container(212).ListItem.Property(Fanart))">$INFO[Container(212).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(213) | Control.HasFocus(8213)] + !String.IsEmpty(Container(213).ListItem.Property(Fanart))">$INFO[Container(213).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(214) | Control.HasFocus(8214)] + !String.IsEmpty(Container(214).ListItem.Property(Fanart))">$INFO[Container(214).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + [Control.HasFocus(215) | Control.HasFocus(8215)] + !String.IsEmpty(Container(215).ListItem.Property(Fanart))">$INFO[Container(215).ListItem.Property(Fanart)]</value>

        <!-- Weather -->
        <value condition="Window.IsVisible(weather) + System.HasAddon(resource.images.weatherfanart.multi)">$INFO[Window(Weather).Property(Current.FanartCode),resource://resource.images.weatherfanart.multi/,/]</value>        

        <!-- Home Window -->
        <value condition="Window.IsVisible(home) + System.HasAddon(resource.images.weatherfanart.multi) + [[String.IsEqual(Container(300).ListItem.Property(widget),weather) + [Control.HasFocus(300) | String.IsEmpty(Container(302).ListItem.Property(widget))]] | [String.IsEqual(Container(302).ListItem.Property(widget),weather) + !Control.HasFocus(300)] | [String.IsEmpty(Container(300).ListItem.Property(widget)) + String.IsEmpty(Container(302).ListItem.Property(widget)) + String.IsEqual(Skin.String(home.fallbackwidget.name),weather)]]">$INFO[Window(Weather).Property(Current.FanartCode),resource://resource.images.weatherfanart.multi/,/]</value>
        <value condition="Window.IsVisible(home) + !System.HasAddon(resource.images.weatherfanart.multi) + [[String.IsEqual(Container(300).ListItem.Property(widget),weather) + [Control.HasFocus(300) | String.IsEmpty(Container(302).ListItem.Property(widget))]] | [String.IsEqual(Container(302).ListItem.Property(widget),weather) + !Control.HasFocus(300)] | [String.IsEmpty(Container(300).ListItem.Property(widget)) + String.IsEmpty(Container(302).ListItem.Property(widget)) + String.IsEqual(Skin.String(home.fallbackwidget.name),weather)]]">$VAR[Global_Background_Image_NoFanart]</value>
        <value condition="Window.IsVisible(home) + [[String.IsEqual(Container(300).ListItem.Property(widget),SystemInfo) + [Control.HasFocus(300) | String.IsEmpty(Container(302).ListItem.Property(widget))]] | [String.IsEqual(Container(302).ListItem.Property(widget),SystemInfo) + !Control.HasFocus(300)] | [String.IsEmpty(Container(300).ListItem.Property(widget)) + String.IsEmpty(Container(302).ListItem.Property(widget)) + String.IsEqual(Skin.String(home.fallbackwidget.name),SystemInfo)]]">$VAR[Global_Background_Image_NoFanart]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(301).ListItem.Art(fanart)) + [!Skin.HasSetting(home.dontshowfanart) | Control.HasFocus(301)] + Control.IsVisible(301)">$INFO[Container(301).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(301).ListItem.Property(fanart)) + [!Skin.HasSetting(home.dontshowfanart) | Control.HasFocus(301)] + Control.IsVisible(301)">$INFO[Container(301).ListItem.Property(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(background),playlistBackground)">$INFO[Container(9988).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Skin.String(home.slideshowpath)) + !String.IsEqual(Skin.String(home.slideshowpath),$LOCALIZE[8]) + [String.IsEmpty(Container(300).ListItem.Property(widget)) | [Container(301).IsUpdating + Integer.IsEqual(Container(301).NumItems,0)] |  Skin.HasSetting(home.dontshowfanart)]">$INFO[Skin.String(home.slideshowpath)]</value>

        <value condition="Window.IsVisible(home) + ![Container(301).IsUpdating + Integer.IsEqual(Container(301).NumItems,0)] + !String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value condition="Window.IsVisible(home) + ![Container(301).IsUpdating + Integer.IsEqual(Container(301).NumItems,0)]">special://skin/extras/backgrounds/default.jpg</value>

        <!-- Fanart -->
        <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(ListItem.Art(animatedfanart))">$INFO[ListItem.Art(animatedfanart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt)) + Skin.HasSetting(SkinHelper.EnableExtraFanart)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Fanart))">$INFO[ListItem.Property(Fanart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Fanart)]</value>

        <!-- Hubs -->
        <value condition="Window.IsVisible(1101) + !String.IsEmpty(Window(Home).Property(SkinHelper.AllMoviesBackground.Wall))">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground.Wall)]</value>
        <value condition="Window.IsVisible(1102) + !String.IsEmpty(Window(Home).Property(SkinHelper.AllTvShowsBackground.Wall))">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground.Wall)]</value>
        <value condition="Window.IsVisible(1103) + !String.IsEmpty(Window(Home).Property(SkinHelper.AllMusicBackground.Wall))">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground.Wall)]</value>
        <value condition="[Window.IsVisible(1101) | Window.IsVisible(1102) | Window.IsVisible(1103) | Window.IsVisible(1104) | Window.IsVisible(1105) | Window.IsVisible(1106) | Window.IsVisible(1107) | Window.IsVisible(1108) | Window.IsVisible(1109) | Window.IsVisible(1111)] + !String.IsEmpty(Window(Home).Property(SkinHelper.AllMoviesBackground.Wall))">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground.Wall)]</value>

        <!-- Pictures -->
        <value condition="Window.IsVisible(MyPics.xml) + !String.IsEmpty(ListItem.FileNameAndPath)">$INFO[ListItem.FileNameAndPath]</value>

        <!-- Fallback -->
        <value condition="!String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>

        <!-- Default -->
        <value>special://skin/extras/backgrounds/default.jpg</value>
    </variable>
</includes>
