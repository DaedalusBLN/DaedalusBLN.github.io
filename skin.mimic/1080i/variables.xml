<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <variable name="GlobalBackgroundVar">
        <value condition="!String.IsEmpty(Container.ListItem.Art(fanart)) + !Skin.HasSetting(Disable.Fanart)">$INFO[Container.ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container.Art(set.fanart))">$INFO[Container.Art(set.fanart)]</value>
        <value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
        <value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
        <value condition="Window.IsActive(1119) + !String.IsEmpty(Container(51).ListItem.Art(fanart)) + Control.HasFocus(51)">$INFO[Container(51).ListItem.Art(fanart)]</value>
        <value condition="String.IsEqual(Container(9033).ListItem.Art(thumb),23)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanartExtension]</value>
        <value condition="!String.IsEmpty(Container(9033).ListItem.Art(thumb))">$INFO[Container(9033).ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(Skin.String(CustomBackground))">$INFO[Skin.String(CustomBackground)]</value>
        <value>$INFO[Window(home).Property(fakelabel)]</value>
    </variable>
    <variable name="HomeBackgroundVar">
        <value condition="!String.IsEmpty(Skin.String(CustomHomeSlideshow))">$INFO[Skin.String(CustomHomeSlideshow)]</value>

        <!-- Sub menu backgrounds -->
        <value condition="String.IsEqual(Container(9010).ListItem.Property(background),weatherBackground)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanartExtension]</value>
        <value condition="String.IsEqual(Container(9010).ListItem.Property(background),playlistBackground)">$INFO[Container(9033).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(9010).ListItem.Property(background))">$INFO[Container(9010).ListItem.Property(background)]</value>

        <!-- Main menu backgrounds -->
        <value condition="String.IsEqual(Container(9000).ListItem.Property(background),weatherBackground)">$INFO[Skin.String(weatherfanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanartExtension]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(background),playlistBackground)">$INFO[Container(9034).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(9000).ListItem.Property(background))">$INFO[Container(9000).ListItem.Property(background)]</value>

        <!-- Custom background -->
        <value condition="!String.IsEmpty(Skin.String(CustomBackground))">$INFO[Skin.String(CustomBackground)]</value>
        <value>special://skin/backgrounds/default_bg.jpg</value>
    </variable>
    <variable name="FallbackBackgroundOnClickVar">
        <value condition="Container.Content(movies) | String.Contains(Container.FolderPath,library://video/movies/) | String.Contains(Container.FolderPath,videodb://movies/)">SetProperty(Mimic.Temp,Movies.Fallback,home)</value>
        <value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | String.Contains(Container.FolderPath,library://video/tvshows/) | String.Contains(Container.FolderPath,videodb://tvshows/)">SetProperty(Mimic.Temp,TVShows.Fallback,home)</value>
        <value condition="Container.Content(musicvideos) | String.Contains(Container.FolderPath,library://video/musicvideos/) | String.Contains(Container.FolderPath,videodb://musicvideos/)">SetProperty(Mimic.Temp,MusicVideos.Fallback,home)</value>
        <value condition="Window.IsActive(videos) | Window.IsActive(videoplaylist)">SetProperty(Mimic.Temp,Videos.Fallback,home)</value>
        <value condition="Window.IsActive(music) | Window.IsActive(musicplaylist)">SetProperty(Mimic.Temp,Music.Fallback,home)</value>
        <value condition="Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvguide) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch)">SetProperty(Mimic.Temp,LiveTV.Fallback,home)</value>
        <value condition="Window.IsActive(SettingsCategory.xml) | Window.IsActive(systeminfo) | Window.IsActive(skinsettings) | Window.IsActive(settings) | Window.IsActive(filemanager) | Window.IsActive(eventlog) | Window.IsActive(profiles)">SetProperty(Mimic.Temp,System.Fallback,home)</value>
        <value condition="Window.IsActive(programs) | Window.IsActive(addonbrowser) | Window.IsActive(1119)">SetProperty(Mimic.Temp,Apps.Fallback,home)</value>
        <value condition="Window.IsActive(pictures)">SetProperty(Mimic.Temp,Pictures.Fallback,home)</value>
        <value condition="Window.IsActive(games)">SetProperty(Mimic.Temp,Games.Fallback,home)</value>
    </variable>
    <variable name="VizBackgroundLabelVar">
        <value condition="String.IsEqual(Skin.String(musicvis.background),fanart)">$LOCALIZE[20445]</value>
        <value condition="System.HasAddon(script.artistslideshow) + String.IsEqual(Skin.String(musicvis.background),artistslideshow)">$INFO[System.AddonTitle(script.artistslideshow)]</value>
        <value condition="String.IsEqual(Skin.String(musicvis.background),albumwall)">$LOCALIZE[31068]</value>
        <value>$LOCALIZE[231]</value>
    </variable>
    <variable name="OverlayBGVar">
        <value condition="!Skin.HasSetting(Disable.ResumableOverlay) + ListItem.IsResumable">overlays/overlaybg.png</value>
        <value condition="Skin.HasSetting(Enable.UnwatchedOverlay) + [String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) | Integer.IsEqual(ListItem.PlayCount,0)]">overlays/overlaybg.png</value>
        <value condition="!Skin.HasSetting(Disable.WatchedOverlay) + [String.IsEqual(ListItem.Overlay,OverlayWatched.png) | Integer.IsGreater(ListItem.PlayCount,0)]">overlays/overlaybg.png</value>
    </variable>
    <variable name="OverlayIconVar">
        <value condition="!Skin.HasSetting(Disable.ResumableOverlay) + ListItem.IsResumable">S</value>
        <value condition="Skin.HasSetting(Enable.UnwatchedOverlay) + [String.IsEqual(ListItem.Overlay,OverlayUnwatched.png) | Integer.IsEqual(ListItem.PlayCount,0)]">R</value>
        <value condition="!Skin.HasSetting(Disable.WatchedOverlay) + [String.IsEqual(ListItem.Overlay,OverlayWatched.png) | Integer.IsGreater(ListItem.PlayCount,0)]">T</value>
    </variable>
    <variable name="OverlayListVar">
        <value condition="ListItem.IsResumable">S</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayUnwatched.png)">R</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | Integer.IsGreater(ListItem.PlayCount,0)">T</value>
    </variable>
    <variable name="BreadcrumbsInfoVar">
        <value condition="String.IsEqual(ListItem.DBTYPE,episode)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,artist) + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,album) + !String.IsEmpty(ListItem.Album)">$INFO[ListItem.Album]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,song) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
        <value condition="!String.IsEmpty(ListItem.Album)">$INFO[ListItem.Album]</value>
        <value condition="!String.IsEmpty(ListItem.Title) + Integer.IsGreaterThan(ListItem.TrackNumber,0)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
        <value condition="!String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
        <value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    <variable name="BreadcrumbsVar">
        <value condition="Window.IsActive(filemanager)">$LOCALIZE[7]</value>
        <value condition="Window.IsActive(weather)">$LOCALIZE[8]</value>
        <value condition="Window.IsActive(script-globalsearch-infodialog.xml)">$INFO[Container(100).ListItem.Label]</value>
        <value condition="Window.IsActive(script-script.extendedinfo-DialogInfo.xml)">$INFO[Window.Property(label)]</value>
        <value condition="Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml)">$INFO[Window.Property(title)]</value>
        <value condition="Window.IsActive(favourites)">$LOCALIZE[1036]</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.program.advanced.launcher/)">$INFO[System.AddonTitle(plugin.program.advanced.launcher)]</value>
        <value condition="Window.IsActive(script-The Big Picture-main.xml)">$INFO[Container(100).ListItem.Property(album_title)]</value>
        <value condition="Window.IsActive(addoninformation) + !Window.IsActive(textviewer)">$INFO[ListItem.AddonName]</value>
        <value condition="Window.IsActive(script-lazytv-BigScreenList.xml) | Window.IsActive(script-lazytv-main.xml)">$INFO[System.AddonTitle(script.lazytv)]</value>
        <value condition="Window.IsActive(script-Rom_Collection_Browser-main.xml)">$INFO[System.AddonTitle(service.rom.collection.browser)]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)">$INFO[System.AddonTitle(script.tv.show.next.aired)]</value>
        <value condition="Window.IsActive(script-script.extendedinfo-VideoList.xml)">$INFO[System.AddonTitle(script.extendedinfo)]</value>
        <value condition="Window.IsActive(script-script.extendedinfo-YoutubeList.xml)">$LOCALIZE[31132]</value>
        <value condition="Window.IsActive(script-globalsearch-main.xml)">$INFO[System.AddonTitle(script.globalsearch)]</value>
        <value condition="Window.IsActive(settings) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(profiles) | Window.IsActive(skinsettings)">$LOCALIZE[5]</value>
        <value condition="Window.IsActive(TVGuide) | Window.IsActive(RadioGuide)">$LOCALIZE[19069]</value>
        <value condition="Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)">$LOCALIZE[19163]</value>
        <value condition="Window.IsActive(TVTimers) | Window.IsActive(RadioTimers)">$LOCALIZE[19040]</value>
        <value condition="Window.IsActive(TVSearch) | Window.IsActive(RadioSearch)">$LOCALIZE[137]</value>
        <value condition="Window.IsActive(eventlog)">$LOCALIZE[14111]$INFO[Control.GetLabel(21), - ,]</value>
        <value condition="Window.IsActive(home)">$LOCALIZE[10000]</value>
        <value condition="!String.IsEmpty(Container.FolderName) + !Window.IsActive(movieinformation) + !Window.IsActive(DialogMusicInfo.xml)">$INFO[Container.FolderName]</value>
        <value condition="Window.IsActive(1119)">$LOCALIZE[24001]</value>
        <value condition="!Window.IsActive(movieinformation) + !Window.IsActive(DialogMusicInfo.xml)">$INFO[System.CurrentWindow]</value>
    </variable>
    <variable name="MusicOSDRepeatButtonVar">
        <value condition="!Playlist.IsRepeat + !Playlist.IsRepeatOne">O</value>
        <value condition="Playlist.IsRepeatOne">p</value>
        <value condition="Playlist.IsRepeat">L</value>
    </variable>
    <!--  List Label Vars -->
    <variable name="ListMainLabelVar">
        <value condition="Container.Content(songs)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
        <value condition="Window.IsActive(videoplaylist) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    <variable name="ListSubLabelVar">
        <value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary]</value>
        <value condition="Container.Content(movies)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Genre]</value>
        <value condition="Container.Content(sets)">$INFO[ListItem.Rating]</value>
        <value condition="Container.Content(seasons)">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20453]]</value>
        <value condition="Container.Content(episodes)">$INFO[ListItem.Premiered]</value>
        <value condition="Container.Content(albums) | Container.Content(songs)">$INFO[ListItem.Artist]</value>
        <value condition="Container.Content(images)">$INFO[ListItem.PictureResolution]</value>
        <value condition="Window.IsActive(videoplaylist) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Premiered]</value>
        <value condition="[Container.Content(actors) | Container.Content(directors)] + !Window.IsActive(musicvideos) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2] $LOCALIZE[31123]</value>
        <value condition="!Container.Content(genres)">$INFO[ListItem.Genre]</value>
    </variable>
    <variable name="PosterVar">
        <value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="Container.Content(episodes) + !String.IsEmpty(Container.Art(season.poster))">$INFO[Container.Art(season.poster)]</value>
        <value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="ListItem.IsParentFolder">DefaultFallbackParent.png</value>
        <value condition="ListItem.IsFolder">DefaultFallback.png</value>
        <value condition="Window.IsActive(videos)">DefaultFallbackMovies.png</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="ThumbVar">
        <value condition="String.Contains(ListItem.Label,* All Albums) | String.Contains(ListItem.Label,* All Songs)">$INFO[ListItem.Icon]</value>
        <value condition="ListItem.IsParentFolder">DefaultFallbackParent.png</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="FanartViewThumb">
        <value condition="Skin.HasSetting(Enable.FanartLandscape) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="Skin.HasSetting(Enable.FanartLogo) + !String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="ListItem.IsParentFolder">DefaultFolderBack.png</value>
        <value>$INFO[ListItem.Art(fanart)]</value>
    </variable>
    <variable name="LandscapeArtVar">
        <value condition="Container.Content(videos)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape)) + !Container.Content(episodes)">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart)) + !Container.Content(episodes)">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value condition="ListItem.IsParentFolder">DefaultFallbackParent.png</value>
        <value>DefaultFallback.png</value>
    </variable>
    <variable name="FanartVar">
        <value condition="ListItem.IsParentFolder">DefaultFallbackParent.png</value>
        <value>$INFO[ListItem.Art(fanart)]</value>
    </variable>
    <variable name="LogoVar">
        <value condition="ListItem.IsParentFolder">DefaultFolderBack.png</value>
        <value>$INFO[ListItem.Art(clearlogo)]</value>
    </variable>
    <variable name="ExtraFanartVar">
        <value condition="Skin.HasSetting(Enable.Extra.Fanart) + !String.IsEmpty(ListItem.Art(extrafanart1))">$INFO[Control.GetLabel(4410)]</value>
        <value condition="Skin.HasSetting(Enable.Landscape.Art) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value>$INFO[ListItem.Art(fanart)]</value>
    </variable>
    <variable name="OneOrMoreSeasonsVar">
        <value condition="String.IsEqual(ListItem.Property(TotalSeasons),1)">$LOCALIZE[20373]</value>
        <value>$LOCALIZE[33054]</value>
    </variable>
    <variable name="OneOrMoreEpisodesVar">
        <value condition="String.IsEqual(ListItem.Property(TotalEpisodes),1)">$LOCALIZE[20359]</value>
        <value>$LOCALIZE[20360]</value>
    </variable>
    <variable name="OneOrMoreSeasonsExtVar">
        <value condition="String.IsEqual(Window.Property(TotalSeasons),1)">$LOCALIZE[20373]</value>
        <value>$LOCALIZE[33054]</value>
    </variable>
    <variable name="OneOrMoreEpisodesExtVar">
        <value condition="String.IsEqual(Window.Property(TotalEpisodes),1)">$LOCALIZE[20359]</value>
        <value>$LOCALIZE[20360]</value>
    </variable>
    <variable name="VideoInfoPlotVar">
        <value condition="Skin.HasSetting(VideoInfoPlotToggle) + !String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
        <value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value>$LOCALIZE[15063]</value>
    </variable>
    <variable name="VideoPlotVar">
        <value condition="Container.Content(seasons) | String.IsEqual(ListItem.DBTYPE,season)">$INFO[Container.ShowPlot]</value>
        <value condition="!String.IsEmpty(ListItem.PlotOutline) + !Skin.HasSetting(VideoInfoPlotToggle)">$INFO[ListItem.PlotOutline]</value>
        <value condition="System.GetBool(videolibrary.showunwatchedplots)">$INFO[ListItem.Plot]</value>
        <value>$INFO[ListItem.Plot]</value>
    </variable>
    <variable name="OtherPlotVar">
        <value condition="[Container.Content(albums) | String.IsEqual(ListItem.DBTYPE,album)] + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="Container.Content(albums) | String.IsEqual(ListItem.DBTYPE,album)">$LOCALIZE[414]</value>
        <value condition="[Container.Content(artists) | String.IsEqual(ListItem.DBTYPE,artist)] + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="Container.Content(artists) | String.IsEqual(ListItem.DBTYPE,artist)">$LOCALIZE[547]</value>
    </variable>
    <variable name="MusicPlotVar">
        <value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]$INFO[ListItem.AddonDisclaimer, -- ]</value>
        <value condition="!String.IsEmpty(ListItem.Comment)">$INFO[ListItem.Comment]</value>
        <value>$INFO[ListItem.Plot]</value>
    </variable>
    <variable name="VideoPlotLocalizeVar">
        <value condition="Skin.HasSetting(VideoInfoPlotToggle)">$LOCALIZE[31045]</value>
        <value>$LOCALIZE[31044]</value>
    </variable>
    <variable name="SourceFlagVar">
        <value condition="[String.Contains(ListItem.filename,PDTV) | String.Contains(ListItem.filename,sdtv) | String.Contains(ListItem.filename,sd tv)]">sdtv</value>
        <value condition="[String.Contains(ListItem.Filename,hdtv) | String.Contains(ListItem.Filename,hd tv)]">hdtv</value>
        <value condition="[String.Contains(ListItem.Filename,hddvd) | String.Contains(ListItem.Filename,hd-dvd)]">hddvd</value>
        <value condition="ListItem.IsStereoscopic">bluray3d</value>
        <value condition="[String.Contains(ListItem.Filename,bluray) | String.Contains(ListItem.Filename,blu-ray) | String.Contains(ListItem.Filename,bdrip) | String.Contains(ListItem.Filename,brrip)]">bluray</value>
        <value condition="String.Contains(ListItem.Filename,dvb)">dvb</value>
        <value condition="String.Contains(ListItem.Filename,web-dl)">web-dl</value>
        <value condition="String.Contains(ListItem.Filename,dvd) | String.IsEqual(ListItem.FileExtension,iso) | String.IsEqual(ListItem.FileExtension,ifo)">dvd</value>
        <value>$INFO[ListItem.VideoCodec]</value>
    </variable>
    <variable name="VideoSourceFlagVar">
        <value condition="[String.Contains(Player.Filenameandpath,PDTV) | String.Contains(Player.Filenameandpath,sdtv)]">sdtv</value>
        <value condition="String.Contains(Player.Filenameandpath,hdtv)">hdtv</value>
        <value condition="[String.Contains(Player.Filenameandpath,hddvd) | String.Contains(Player.Filenameandpath,hd-dvd)]">hddvd</value>
        <value condition="VideoPlayer.IsStereoscopic">bluray3d</value>
        <value condition="[String.Contains(Player.Filenameandpath,bluray) | String.Contains(Player.Filenameandpath,blu-ray) | String.Contains(Player.Filenameandpath,bdrip) | String.Contains(Player.Filenameandpath,brrip)]">bluray</value>
        <value condition="String.Contains(Player.Filenameandpath,dvb)">dvb</value>
        <value condition="String.Contains(Player.Filenameandpath,web-dl)">web-dl</value>
        <value condition="String.Contains(Player.Filenameandpath,dvd) | String.Contains(Player.Filenameandpath,.iso,Right) | String.Contains(Player.Filenameandpath,.ifo,Right)">dvd</value>
        <value>$INFO[VideoPlayer.VideoCodec]</value>
    </variable>
    <variable name="BannerThumb">
        <value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster)) + String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(poster)]</value>
    </variable>
    <variable name="FloorLabelVar">
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode)] + String.Contains(Container.FolderPath,/recentlyaddedepisodes)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    <variable name="FloorSubLabelVar">
        <value condition="String.IsEqual(ListItem.DBTYPE,episode)">$INFO[ListItem.TvShowTitle]</value>
        <value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,musicvideo)">$INFO[ListItem.Artist]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,set)">$INFO[ListItem.Label2]</value>
        <value condition="String.IsEmpty(ListItem.Genre)">$INFO[Window(Home).Property(Set.Movies.Genre)]</value>
        <value condition="!String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year]$INFO[ListItem.Genre, • ]</value>
        <value>$INFO[ListItem.Genre]</value>
    </variable>
    <variable name="FloorLabel2Var">
        <value condition="String.IsEqual(ListItem.DBTYPE,artist)">$INFO[ListItem.Property(Artist_Genre)]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,song)">$INFO[ListItem.Duration,, | ]$INFO[ListItem.Album]</value>
        <value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary]</value>
        <value condition="Container.Content()">$INFO[ListItem.Comment]</value>
        <value>$INFO[ListItem.Label2]</value>
    </variable>
    <variable name="SeekLabelVar">
        <value condition="Player.Paused + !Player.Caching">$LOCALIZE[112]</value>
        <value condition="Player.Playing + !Player.Seeking + !Player.DisplayAfterSeek | [Player.Paused + !Player.Caching]">$INFO[System.Time]$INFO[Player.FinishTime, - ,]</value>
        <value condition="[Player.Paused + Player.Caching] + !Player.Seeking + !Player.DisplayAfterSeek">$INFO[Player.CacheLevel,$LOCALIZE[15107] ,%]</value>
        <value condition="!String.IsEmpty(Player.SeekStepSize) + ![Player.Forwarding | Player.Rewinding]">$LOCALIZE[31046] $INFO[Player.SeekStepSize]</value>
        <value condition="Player.DisplayAfterSeek + ![Player.Forwarding | Player.Rewinding]">$LOCALIZE[31046] $INFO[Player.SeekOffset]</value>
        <value condition="!Player.DisplayAfterSeek + Player.Seeking">$LOCALIZE[31046]</value>
    </variable>
    <variable name="MusicSeekLabelVar">
        <value condition="Player.Playing + !Player.Seeking + !Player.DisplayAfterSeek">$INFO[System.Time]</value>
        <value condition="Player.Paused + !Player.Caching">$LOCALIZE[112]</value>
        <value condition="!String.IsEmpty(Player.SeekStepSize) + ![Player.Forwarding | Player.Rewinding]">$LOCALIZE[31046] $INFO[Player.SeekStepSize]</value>
        <value condition="Player.DisplayAfterSeek + ![Player.Forwarding | Player.Rewinding]">$LOCALIZE[31046] $INFO[Player.SeekOffset]</value>
        <value condition="!Player.DisplayAfterSeek + Player.Seeking">$LOCALIZE[31046]</value>
    </variable>
    <variable name="VideoPlayerForwardRewindVar">
        <value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
        <value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
        <value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
        <value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
        <value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
    </variable>
    <variable name="PlayerArtworkVar">
        <value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.thumb))">$INFO[Player.Art(tvshow.thumb)]</value>
        <value>$INFO[Player.Art(thumb)]</value>
    </variable>
    <variable name="PlayerTitleLabelVar">
        <value condition="Player.ChapterCount">$INFO[Player.Title]$INFO[player.chapter, • $LOCALIZE[21396] ]$INFO[player.chaptercount, / ,]</value>
        <value>$INFO[Player.Title]</value>
    </variable>
    <variable name="SkinSettingsDescriptionVar">
        <value condition="Control.HasFocus(100)">$LOCALIZE[31912]</value>
        <value condition="Control.HasFocus(101)">$LOCALIZE[31020]</value>
        <value condition="Control.HasFocus(102)">$LOCALIZE[31081]</value>
        <value condition="Control.HasFocus(105)">$LOCALIZE[31232]</value>       
        <value condition="Control.HasFocus(200)">$LOCALIZE[31917]</value>
        <value condition="Control.HasFocus(201)">$LOCALIZE[31932]</value>
        <value condition="Control.HasFocus(202)">$LOCALIZE[31239]</value>
        <value condition="Control.HasFocus(203)">$LOCALIZE[31944]</value>
        <value condition="Control.HasFocus(204)">$LOCALIZE[31131]</value>
        <value condition="Control.HasFocus(207)">$LOCALIZE[31252]</value>
        <value condition="Control.HasFocus(208)">$LOCALIZE[31253]</value>
        <value condition="Control.HasFocus(303)">$LOCALIZE[31121]</value>
        <value condition="Control.HasFocus(305)">$LOCALIZE[31938]</value>
        <value condition="Control.HasFocus(306)">$LOCALIZE[31114]</value>
        <value condition="Control.HasFocus(312)">$LOCALIZE[31136]</value>
        <value condition="Control.HasFocus(402)">$LOCALIZE[31942]</value>
        <value condition="Control.HasFocus(403)">$LOCALIZE[31261]</value>
        <value condition="Control.HasFocus(601)">$LOCALIZE[31116]</value>
        <value condition="Control.HasFocus(602)">$LOCALIZE[31918]</value>
        <value condition="Control.HasFocus(603)">$LOCALIZE[31919]</value>
        <value condition="Control.HasFocus(605)">$LOCALIZE[31164]</value>
        <value condition="Control.HasFocus(607)">$LOCALIZE[31275]</value>
        <value condition="Control.HasFocus(9007)">$LOCALIZE[31183]</value>
    </variable>
    <variable name="SkinShortcutsDescriptionVar">
        <value condition="Control.HasFocus(401)">$LOCALIZE[31923]</value>
        <value condition="Control.HasFocus(306)">$LOCALIZE[31243]</value>
        <value condition="Control.HasFocus(307)">$LOCALIZE[31126]</value>
        <value condition="Control.HasFocus(405)">$LOCALIZE[31150]</value>
        <value condition="Control.HasFocus(310)">$LOCALIZE[31925]</value>
        <value condition="Control.HasFocus(312)">$LOCALIZE[31149]</value>
        <value condition="Control.HasFocus(500)">$LOCALIZE[31933]</value>
        <value condition="Control.HasFocus(501)">$LOCALIZE[31162]</value>
        <value condition="Control.HasFocus(502)">$LOCALIZE[31161]</value>
        <value condition="Control.HasFocus(503)">$LOCALIZE[31233]</value>
    </variable>
    
    <variable name="RatingFlagVar">
        <value condition="String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G)">flags/mpaa/G.png</value>
        <value condition="String.Contains(ListItem.mpaa,PG-13)">flags/mpaa/PG-13.png</value>
        <value condition="String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">flags/mpaa/PG.png</value>
        <value condition="String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.mpaa,R)">flags/mpaa/R.png</value>
        <value condition="String.Contains(ListItem.mpaa,US:NC-17)| String.Contains(ListItem.mpaa,USA:NC-17)| String.Contains(ListItem.mpaa,Rated NC-17)">flags/mpaa/NC-17.png</value>
        <value condition="String.Contains(ListItem.mpaa,UK:U)">flags/mpaa/BBFC_U_Certificate_UK.png</value>
        <value condition="String.Contains(ListItem.mpaa,UK:PG)">flags/mpaa/BBFC_PG_Certificate_UK.png</value>
        <value condition="String.Contains(ListItem.mpaa,UK:12A)">flags/mpaa/BBFC_12A_Certificate_UK.png</value>
        <value condition="String.Contains(ListItem.mpaa,UK:12)">flags/mpaa/BBFC_12_Certificate_UK.png</value>
        <value condition="String.Contains(ListItem.mpaa,UK:15)">flags/mpaa/BBFC_15_Certificate_UK.png</value>
        <value condition="String.Contains(ListItem.mpaa,UK:18)">flags/mpaa/BBFC_18_Certificate_UK.png</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:16) | String.Contains(ListItem.mpaa,ab 16) | String.IsEqual(ListItem.mpaa,16) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 16)">flags/mpaa/FSK-16.png</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:6)| String.Contains(ListItem.mpaa,ab 6) | String.IsEqual(ListItem.mpaa,6) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 6)">flags/mpaa/FSK-6.png</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:12) | String.Contains(ListItem.mpaa,ab 12) | String.IsEqual(ListItem.mpaa,12) | String.Contains(ListItem.mpaa,FSK 12) | String.Contains(ListItem.mpaa,Rated 12)">flags/mpaa/FSK-12.png</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:18) | String.Contains(ListItem.mpaa,ab 18) | String.IsEqual(ListItem.mpaa,18) | String.Contains(ListItem.mpaa,FSK 18) | String.Contains(ListItem.mpaa,Rated 18)">flags/mpaa/FSK-18.png</value>
        <value condition="String.Contains(ListItem.mpaa,Germany)|String.Contains(ListItem.mpaa,FSK)| String.Contains(ListItem.mpaa,o.A)| String.Contains(ListItem.mpaa,Rated 0)">flags/mpaa/FSK-0.png</value>
        <value condition="String.Contains(ListItem.mpaa,besorolás alatt)">flags/mpaa/HU_BA.png</value>
        <value condition="String.Contains(ListItem.mpaa,korhatárra való tekintett nélkül megtekintetheto)">flags/mpaa/HU_KN.png</value>
        <value condition="String.Contains(ListItem.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">flags/mpaa/HU_12.png</value>
        <value condition="String.Contains(ListItem.mpaa,16 éven aluliak számára nem ajánlott)">flags/mpaa/HU_16.png</value>
        <value condition="String.Contains(ListItem.mpaa,18 éven aluliak számára nem ajánlott)">flags/mpaa/HU_18.png</value>
        <value condition="String.Contains(ListItem.mpaa,France:U) | String.Contains(ListItem.mpaa,partir de 3 ans) | String.Contains(ListItem.mpaa,partir de 6 ans)">flags/mpaa/csaU.png</value>
        <value condition="String.Contains(ListItem.mpaa,France:-10) | String.Contains(ListItem.mpaa,Interdit aux moins de 10 ans) | String.Contains(ListItem.mpaa,des propos ou des images peuvent heurter)">flags/mpaa/csa10.png</value>
        <value condition="String.Contains(ListItem.mpaa,France:-12) | String.Contains(ListItem.mpaa,Interdit aux moins de 12 ans)">flags/mpaa/csa12.png</value>
        <value condition="String.Contains(ListItem.mpaa,France:-16) | String.Contains(ListItem.mpaa,Interdit aux moins de 16 ans)">flags/mpaa/csa16.png</value>
        <value condition="String.Contains(ListItem.mpaa,France:-18) | String.Contains(ListItem.mpaa,Interdit aux moins de 18 ans)">flags/mpaa/csa18.png</value>
        <value condition="String.Contains(ListItem.mpaa,전체)">flags/mpaa/KR_Certificate_All.png</value>
        <value condition="String.Contains(ListItem.mpaa,12세)">flags/mpaa/KR_Certificate_12.png</value>
        <value condition="String.Contains(ListItem.mpaa,15세)">flags/mpaa/KR_Certificate_15.png</value>
        <value condition="String.Contains(ListItem.mpaa,불가)">flags/mpaa/KR_Certificate_18.png</value>
        <value condition="String.Contains(ListItem.mpaa,제한)">flags/mpaa/KR_Certificate_R.png</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:Livre) | String.Contains(ListItem.mpaa,Livre)">flags/mpaa/MPAA_Brazil_Livre.png</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:10) | String.Contains(ListItem.mpaa,10 anos)">flags/mpaa/MPAA_Brazil_10.png</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:12) | String.Contains(ListItem.mpaa,12 anos)">flags/mpaa/MPAA_Brazil_12.png</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:14) | String.Contains(ListItem.mpaa,14 anos)">flags/mpaa/MPAA_Brazil_14.png</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:16) | String.Contains(ListItem.mpaa,16 anos)">flags/mpaa/MPAA_Brazil_16.png</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:18) | String.Contains(ListItem.mpaa,18 anos)">flags/mpaa/MPAA_Brazil_18.png</value>
        <value condition="String.Contains(ListItem.mpaa,Australia:)">$INFO[ListItem.MPAA,flags/mpaa/australia_,.png]</value>
        <value>$INFO[ListItem.MPAA,flags/mpaa/,.png]</value>
    </variable>
    <variable name="VideoRatingFlagVar">
        <value condition="String.Contains(VideoPlayer.mpaa,US:G) | String.Contains(VideoPlayer.mpaa,USA:G) | String.Contains(VideoPlayer.mpaa,Rated G)">flags/mpaa/G.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,PG-13)">flags/mpaa/PG-13.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Rated PG) | String.IsEqual(VideoPlayer.Mpaa,PG)">flags/mpaa/PG.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,US:R) | String.Contains(VideoPlayer.mpaa,USA:R) | String.Contains(VideoPlayer.mpaa,Rated R) | String.IsEqual(VideoPlayer.mpaa,R)">flags/mpaa/R.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,US:NC-17)| String.Contains(VideoPlayer.mpaa,USA:NC-17)| String.Contains(VideoPlayer.mpaa,Rated NC-17)">flags/mpaa/NC-17.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,UK:U)">flags/mpaa/BBFC_U_Certificate_UK.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,UK:PG)">flags/mpaa/BBFC_PG_Certificate_UK.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,UK:12A)">flags/mpaa/BBFC_12A_Certificate_UK.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,UK:12)">flags/mpaa/BBFC_12_Certificate_UK.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,UK:15)">flags/mpaa/BBFC_15_Certificate_UK.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,UK:18)">flags/mpaa/BBFC_18_Certificate_UK.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Germany:16) | String.Contains(VideoPlayer.mpaa,ab 16) | String.IsEqual(VideoPlayer.mpaa,16) | String.Contains(VideoPlayer.mpaa,FSK 16) | String.Contains(VideoPlayer.mpaa,Rated 16)">flags/mpaa/FSK-16.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Germany:6)| String.Contains(VideoPlayer.mpaa,ab 6) | String.IsEqual(VideoPlayer.mpaa,6) | String.Contains(VideoPlayer.mpaa,FSK 16) | String.Contains(VideoPlayer.mpaa,Rated 6)">flags/mpaa/FSK-6.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Germany:12) | String.Contains(VideoPlayer.mpaa,ab 12) | String.IsEqual(VideoPlayer.mpaa,12) | String.Contains(VideoPlayer.mpaa,FSK 12) | String.Contains(VideoPlayer.mpaa,Rated 12)">flags/mpaa/FSK-12.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Germany:18) | String.Contains(VideoPlayer.mpaa,ab 18) | String.IsEqual(VideoPlayer.mpaa,18) | String.Contains(VideoPlayer.mpaa,FSK 18) | String.Contains(VideoPlayer.mpaa,Rated 18)">flags/mpaa/FSK-18.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Germany)|String.Contains(VideoPlayer.mpaa,FSK)| String.Contains(VideoPlayer.mpaa,o.A)| String.Contains(VideoPlayer.mpaa,Rated 0)">flags/mpaa/FSK-0</value>
        <value condition="String.Contains(VideoPlayer.mpaa,besorolás alatt)">flags/mpaa/HU_BA.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,korhatárra való tekintett nélkül megtekintetheto)">flags/mpaa/HU_KN.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">flags/mpaa/HU_12.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,16 éven aluliak számára nem ajánlott)">flags/mpaa/HU_16.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,18 éven aluliak számára nem ajánlott)">flags/mpaa/HU_18.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,France:U) | String.Contains(VideoPlayer.mpaa,partir de 3 ans) | String.Contains(VideoPlayer.mpaa,partir de 6 ans)">flags/mpaa/csaU.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,France:-10) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 10 ans) | String.Contains(VideoPlayer.mpaa,des propos ou des images peuvent heurter)">flags/mpaa/csa10.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,France:-12) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 12 ans)">flags/mpaa/csa12.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,France:-16) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 16 ans)">flags/mpaa/csa16.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,France:-18) | String.Contains(VideoPlayer.mpaa,Interdit aux moins de 18 ans)">flags/mpaa/csa18.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,전체)">flags/mpaa/KR_Certificate_All.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,12세)">flags/mpaa/KR_Certificate_12.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,15세)">flags/mpaa/KR_Certificate_15.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,불가)">flags/mpaa/KR_Certificate_18.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,제한)">flags/mpaa/KR_Certificate_R.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Brazil:Livre) | String.Contains(VideoPlayer.mpaa,Livre)">flags/mpaa/MPAA_Brazil_Livre.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Brazil:10) | String.Contains(VideoPlayer.mpaa,10 anos)">flags/mpaa/MPAA_Brazil_10.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Brazil:12) | String.Contains(VideoPlayer.mpaa,12 anos)">flags/mpaa/MPAA_Brazil_12.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Brazil:14) | String.Contains(VideoPlayer.mpaa,14 anos)">flags/mpaa/MPAA_Brazil_14.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Brazil:16) | String.Contains(VideoPlayer.mpaa,16 anos)">flags/mpaa/MPAA_Brazil_16.png</value>
        <value condition="String.Contains(VideoPlayer.mpaa,Brazil:18) | String.Contains(VideoPlayer.mpaa,18 anos)">flags/mpaa/MPAA_Brazil_18.png</value>
        <value>$INFO[VideoPlayer.MPAA,flags/mpaa/,.png]</value>
    </variable>
    <variable name="VizArtistInfoVar">
        <value condition="Skin.HasSetting(Enable.VizInfo)">$LOCALIZE[31106]</value>
        <value condition="Skin.HasSetting(Enable.VizPersistent)">$LOCALIZE[31107]</value>
        <value>$LOCALIZE[1223]</value>
    </variable>
    <variable name="HomeNowPlayingThumbVar">
        <value condition="![Player.Playing | Player.HasAudio | Player.HasVideo] + !String.IsEmpty(Window(weather).Property(Current.FanartCode))">$VAR[WeatherIconVar]$INFO[Window(weather).Property(Current.FanartCode),,.png]</value>
        <value condition="[VideoPlayer.Content(movies) | VideoPlayer.Content(musicvideos)] + !String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
        <value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
        <value condition="VideoPlayer.Content(livetv) + !String.IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
        <value condition="VideoPlayer.Content(livetv) + !String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
        <value condition="VideoPlayer.Content(livetv)">DefaultAddonPVRClient.png</value>
        <value condition="[Player.Playing | Player.HasVideo | Player.HasAudio] + !String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
        <value condition="[Player.Playing | Player.HasVideo | Player.HasAudio] + String.IsEmpty(Player.Art(thumb))">DefaultVideo.png</value>
        <value condition="!String.IsEmpty(Weather.Plugin) + !Weather.IsFetched">DefaultAddonNone.png</value>
        <value>DefaultIconClock.png</value>
    </variable>
    <!--<variable name="ColorHighlightVar">
        <value condition="!String.IsEmpty(Skin.String(highlightcolor.name))">$INFO[Skin.String(highlightcolor.name)]</value>
        <value>highlight</value>
    </variable>
    <variable name="ColorBackgroundVar">
        <value condition="!String.IsEmpty(Skin.String(backgroundcolor.name))">$INFO[Skin.String(backgroundcolor.name)]</value>
        <value>background</value>
    </variable>
    <variable name="ColorDialogVar">
        <value condition="!String.IsEmpty(Skin.String(dialogcolor.name))">$INFO[Skin.String(dialogcolor.name)]</value>
        <value>dialog</value>
    </variable>
    <variable name="ColorTextVar">
        <value condition="!String.IsEmpty(Skin.String(textcolor.name))">$INFO[Skin.String(textcolor.name)]</value>
        <value>maintext</value>
    </variable>
    <variable name="ColorDisabledVar">
        <value condition="!String.IsEmpty(Skin.String(disabledcolor.name))">$INFO[Skin.String(disabledcolor.name)]</value>
        <value>disabled</value>
    </variable>
    <variable name="ColorMenuVar">
        <value condition="!String.IsEmpty(Skin.String(menucolor.name))">$INFO[Skin.String(menucolor.name)]</value>
        <value>maintext</value>
    </variable>
    <variable name="ColorRecordingVar">
        <value condition="Player.Recording">ffff0000</value>
        <value condition="!Player.Recording + !String.IsEmpty(Skin.String(menucolor.name))">$INFO[Skin.String(menucolor.name)]</value>
        <value>maintext</value>
    </variable>-->
    <variable name="ArtLabelVar">
        <value condition="[Control.IsVisible(57) + Skin.HasSetting(Enable.ShiftLandscape) + Window.IsActive(videos)] | [Control.IsVisible(59) + Skin.HasSetting(Enable.FanartLandscape) + Window.IsActive(videos)] | [Control.IsVisible(500) + Skin.HasSetting(Enable.IconLandscape)] | [Control.IsVisible(505) + !Skin.HasSetting(Enable.PanelFanart) + !Skin.HasSetting(Enable.PanelLogo)] | [Control.IsVisible(507) + !Skin.HasSetting(Enable.BigListPoster) + !Skin.HasSetting(Enable.BigListLogo) + !Skin.HasSetting(Enable.BigListFanart) + !Window.IsActive(music)] | [Control.IsVisible(509) + Skin.HasSetting(Enable.WallLandscape)] | [Control.IsVisible(52) + Skin.HasSetting(Enable.ThumbnailLandscape) + [Container.Content(movies) | Container.Content(tvshows)]]">$LOCALIZE[31100]</value>
        <value condition="[Control.IsVisible(51) + Skin.HasSetting(InfoWall.Banners)] | [Control.IsVisible(500) + Skin.HasSetting(Enable.IconBanner)] | [Control.IsVisible(509) + Skin.HasSetting(Enable.WallBanner)]">$LOCALIZE[31085]</value>
        <value condition="[Control.IsVisible(51) + Skin.HasSetting(InfoWall.Logo) + !Container.Content(seasons)] | [Control.IsVisible(500) + Skin.HasSetting(Enable.IconLogo) + !Container.Content(seasons)] | [Control.IsVisible(59) + Skin.HasSetting(Enable.FanartLogo) + Window.IsActive(videos)] | [Control.IsVisible(505) + Skin.HasSetting(Enable.PanelLogo)] | [Control.IsVisible(507) + Skin.HasSetting(Enable.BigListLogo)] | [Control.IsVisible(509) + Skin.HasSetting(Enable.WallLogo) + !Container.Content(seasons)] | [Control.IsVisible(52) + Skin.HasSetting(Enable.ThumbnailLogo) + [Container.Content(movies) | Container.Content(tvshows)]]">$LOCALIZE[31088]</value>
        
        <value condition="[Control.IsVisible(57) + Window.IsActive(music) + Skin.HasSetting(Enable.ShiftFanart)] | [Control.IsVisible(57) + Window.IsActive(videos) + Skin.HasSetting(Enable.ShiftVidFanart)] | [Control.IsVisible(505) + Skin.HasSetting(Enable.PanelFanart)] | [Control.IsVisible(507) + Window.IsActive(music) + !Skin.HasSetting(Enable.BigListThumb)] | [Control.IsVisible(507) + Window.IsActive(videos) + Skin.HasSetting(Enable.BigListFanart)] | [Control.IsVisible(52) + Skin.HasSetting(Enable.ThumbnailFanart)] | [Control.IsVisible(59) + Skin.HasSetting(Enable.FanartFanart) + Window.IsActive(videos)]">$LOCALIZE[20445]</value>
        <value condition="[Control.IsVisible(507) + Skin.HasSetting(Enable.BigListPoster)]">$LOCALIZE[31016]</value>
        <value condition="[Control.IsVisible(57) + !Skin.HasSetting(Enable.ShiftFanart) + Window.IsActive(music)] | [Control.IsVisible(507) + [Skin.HasSetting(Enable.BigListThumb) | Container.Content(albums)]]">$LOCALIZE[21371]</value>
        <value>$LOCALIZE[31016]</value>
    </variable>
    <variable name="Art2LabelVar">
        <value condition="Skin.HasSetting(Enable.Extra.Fanart) + !String.IsEmpty(ListItem.Art(extrafanart1))">$LOCALIZE[31118]</value>
        <value condition="Skin.HasSetting(Enable.Landscape.Art) + !String.IsEmpty(ListItem.Art(landscape))">$LOCALIZE[31100]</value>
        <value>$LOCALIZE[20445]</value>
    </variable>
    <variable name="SortDirection">
        <value condition="Container.SortDirection(Ascending)">$LOCALIZE[31050]</value>
        <value condition="Container.SortDirection(Descending)">$LOCALIZE[31051]</value>
    </variable>
    <variable name="WeatherIconVar">
        <value condition="System.HasAddon(script.image.resource.select) + !String.IsEmpty(Skin.String(weathericons.path))">$INFO[Skin.String(weathericons.path)]</value>
        <value>resource://resource.images.weathericons.default/</value>
    </variable>
    <variable name="WidgetIconLabel">
        <value condition="!String.IsEmpty(Container(211).ListItem.Property(widgetIcon))">$INFO[Container(211).ListItem.Property(widgetIcon)]</value>
        <value>$LOCALIZE[21371]</value>
    </variable>
    <variable name="WidgetSortByLabel">
        <value condition="String.IsEqual(Container(211).ListItem.Property(widgetSortBy),date)">$LOCALIZE[552]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(widgetSortBy),lastplayed)">$LOCALIZE[568]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(widgetSortBy),lastused)">$LOCALIZE[12012]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(widgetSortBy),sorttitle)">$LOCALIZE[551]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(widgetSortBy),rating)">$LOCALIZE[563]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(widgetSortBy),year)">$LOCALIZE[562]</value>
        <value>$LOCALIZE[16018]</value>
    </variable>
    <variable name="WidgetSortDirectionLabel">
        <value condition="String.IsEqual(Container(211).ListItem.Property(widgetSortDirection),ascending)">$LOCALIZE[584]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(widgetSortDirection),descending)">$LOCALIZE[585]</value>
        <value>$LOCALIZE[16018]</value>
    </variable>
    <variable name="WidgetLimitLabel">
        <value condition="!String.IsEmpty(Container(211).ListItem.Property(widgetLimit))">$INFO[Container(211).ListItem.Property(widgetLimit)]</value>
        <value>$LOCALIZE[16018]</value>
    </variable>
    <variable name="WeatherFanartExtension">
        <value condition="Skin.HasSetting(weatherfanart.multi)">/</value>
        <value>.jpg</value>
    </variable>
    <variable name="HeaderIcon">
        <value condition="Player.Muted">DefaultIconMute.png</value>
        <value condition="Window.IsVisible(movieinformation)">DefaultAddonInfoProvider.png</value>
        <value condition="Window.IsVisible(musicinformation)">DefaultAddonInfoProvider.png</value>
        <value condition="Window.IsVisible(songinformation)">DefaultAddonInfoProvider.png</value>
        <value condition="Window.IsVisible(addoninformation)">DefaultAddonInfoProvider.png</value>
        <value condition="Window.IsVisible(script-globalsearch-infodialog.xml)">DefaultAddonInfoProvider.png</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)">DefaultAddonInfoProvider.png</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)">DefaultAddonInfoProvider.png</value>
        <value condition="Window.IsActive(script-The Big Picture-main.xml)">$INFO[System.AddonIcon(script.image.bigpictures)]</value>
        <value condition="Window.IsVisible(DialogFavourites.xml)">DefaultIconFavourite.png</value>
        <value condition="Window.IsVisible(script-Rom_Collection_Browser-main.xml)">DefaultProgram.png</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml)">DefaultMovies.png</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-YoutubeList.xml) | String.Contains(Container.FolderPath,plugin://plugin.video.youtube/)">addons/youtube.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.video.itunes_trailers/) | String.Contains(Container.FolderPath,plugin://plugin.video.itunes_podcasts/)">addons/apple.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.video.9gagtv/)">addons/9gag.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.video.vimeo/)">addons/vimeo.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.video.pinkbike/)">addons/pinkbike.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.video.cbsnews_com/)">addons/CBS.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.video.npr/)">addons/npr.png</value>
        <value condition="Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">DefaultAddonPVRClient.png</value>
        <value condition="Window.IsVisible(script-globalsearch-main.xml)">DefaultIconSearch.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://plugin.program.advanced.launcher/) | Window.IsActive(programs)">DefaultProgram.png</value>
        <value condition="String.Contains(Container.FolderPath,sources://)">DefaultFile.png</value>
        <value condition="Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)">DefaultPlaylist.png</value>
        <value condition="String.Contains(Container.FolderPath,special://videoplaylists/)">DefaultPlaylist.png</value>
        <value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/)">DefaultPlaylist.png</value>
        <value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/video/)">DefaultPlaylist.png</value>
        <value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/music/)">DefaultPlaylist.png</value>
        <value condition="String.IsEqual(Container.FolderPath,special://profile/playlists/mixed/)">DefaultPlaylist.png</value>
        <value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">DefaultMusicSongs.png</value>
        <value condition="String.Contains(Container.FolderPath,library://video/movies/)">DefaultMovies.png</value>
        <value condition="String.Contains(Container.FolderPath,library://video/tvshows/)">DefaultTVShows.png</value>
        <value condition="String.Contains(Container.FolderPath,videodb://movies/)">DefaultMovies.png</value>
        <value condition="String.Contains(Container.FolderPath,videodb://tvshows/)">DefaultTVShows.png</value>
        <value condition="String.Contains(Container.FolderPath,plugin://)">DefaultMovies.png</value>
        <value condition="Container.Content(movies)">DefaultMovies.png</value>
        <value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsVisible(script-lazytv-BigScreenList.xml) | Window.IsVisible(script-lazytv-main.xml)">DefaultTVShows.png</value>
        <value condition="Container.Content(songs)">DefaultMusicSongs.png</value>
        <value condition="Container.Content(livetv)">DefaultAddonPVRClient.png</value>
        <value condition="Container.Content(files)">DefaultFile.png</value>
        <value condition="Container.Content(plugins)">DefaultMovies.png</value>
        <value condition="Container.Content(addons)">DefaultAddon.png</value>
        <value condition="String.Contains(Container.FolderPath,videodb://musicvideos/)">DefaultMovies.png</value>
        <value condition="Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml)">DefaultAddonPVRClient.png</value>
        <value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">DefaultMusicSongs.png</value>
        <value condition="Window.IsVisible(MyPics.xml)">DefaultPicture.png</value>
        <value condition="Window.IsVisible(MyPrograms.xml) | Window.IsVisible(AddonBrowser.xml)">DefaultAddon.png</value>
        <value condition="Window.IsVisible(weather)">DefaultAddonWeather.png</value>
        <value condition="Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml) | Window.IsVisible(EventLog.xml) | Window.IsVisible(profiles)">DefaultIconSettings.png</value>
        <value condition="Window.IsVisible(FileManager.xml)">DefaultFile.png</value>
        <value condition="Window.IsVisible(MyVideoNav.xml)">DefaultMovies.png</value>
        <value condition="Window.IsActive(home) + !String.IsEmpty(Container(9000).ListItem.Icon)">$INFO[Container(9000).ListItem.Icon]</value>
        <value condition="Window.IsActive(home)">DefaultIconHome.png</value>
        <value condition="Window.IsActive(1119)">DefaultAddon.png</value>
        <value>DefaultArtist.png</value>
    </variable>
    <variable name="HeaderSubLabelInfoDialog">
        <value condition="String.IsEqual(ListItem.DBTYPE,movie) + !String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,movie) + String.IsEmpty(ListItem.Tagline)">$INFO[ListItem.OriginalTitle]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,tvshow) + !String.IsEmpty(Window(Home).Property(NextAired.Status))">$INFO[Window(Home).Property(NextAired.Status)]</value>
        <value condition="[String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,season)] + !String.IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,musicvideo) + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,artist)">$INFO[ListItem.Genre]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,album)">$INFO[ListItem.Artist]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,song)">$INFO[ListItem.Artist]$INFO[ListItem.Album, • ]</value>
        <value>$LOCALIZE[14116]</value>
    </variable>
    <variable name="HeaderSubLabel">
        <value condition="Window.IsActive(script-script.extendedinfo-DialogInfo.xml) + !String.IsEmpty(Window.Property(AlsoKnownAs))">$INFO[Window.Property(AlsoKnownAs)]</value>
        <value condition="Window.IsActive(script-script.extendedinfo-DialogInfo.xml) + String.IsEmpty(Window.Property(AlsoKnownAs))">$LOCALIZE[14116]</value>
        <value condition="Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) + !String.IsEmpty(Window.Property(tagline))">$INFO[Window.Property(tagline)]</value>
        <value condition="Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) + String.IsEmpty(Window.Property(tagline))">$INFO[Window.Property(originaltitle)]</value>
        <value condition="Window.IsActive(addoninformation)">$INFO[ListItem.AddonType]</value>
        <value condition="Window.IsActive(script-globalsearch-infodialog.xml) + Control.IsVisible(110) + !String.IsEmpty(Container(100).ListItem.Property(TagLine))">$INFO[Container(100).ListItem.Property(TagLine)]</value>
        <value condition="Window.IsActive(script-globalsearch-infodialog.xml) + Control.IsVisible(110) + String.IsEmpty(Container(100).ListItem.Property(TagLine))">$INFO[Container(100).ListItem.Property(PlotOutline)]</value>
        <value condition="Window.IsActive(script-globalsearch-infodialog.xml) + Control.IsVisible(120)">$INFO[Container(100).ListItem.Property(Genre)]</value>
        <value condition="Window.IsActive(script-globalsearch-infodialog.xml) + [Control.IsVisible(130) | Control.IsVisible(140)]">$INFO[Container(100).ListItem.Property(TVShowTitle)]</value>
        <value condition="Window.IsActive(script-globalsearch-infodialog.xml) + [Control.IsVisible(150) | Control.IsVisible(170) | Control.IsVisible(180)]">$INFO[Container(100).ListItem.Property(Artist)]</value>
        <value condition="Window.IsActive(script-globalsearch-infodialog.xml) + Control.IsVisible(160)">$INFO[Container(100).ListItem.Property(Artist_Genre)]</value>
        <value condition="Window.IsVisible(home) + Window.IsActive(DialogContextMenu.xml)">$LOCALIZE[31246]</value>
        <value condition="Window.IsActive(script-The Big Picture-main.xml)">$INFO[Container(100).ListItem.Label]</value>
        <value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(1)">$INFO[Container(200).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(2)">$INFO[Container(201).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(3)">$INFO[Container(202).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(4)">$INFO[Container(203).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(5)">$INFO[Container(204).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(6)">$INFO[Container(205).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="[Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)] + Container(9000).HasFocus(7)">$INFO[Container(206).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(8)">$INFO[Container(207).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(9)">$INFO[Container(208).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(10)">$INFO[Container(209).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(11)">$INFO[Container(210).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(12)">$INFO[Container(211).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(13)">$INFO[Container(212).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(14)">$INFO[Container(213).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(15)">$INFO[Container(214).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide2.xml) + Container(9000).HasFocus(16)">$INFO[Container(215).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsVisible(script-lazytv-BigScreenList.xml) | Window.IsVisible(script-lazytv-main.xml)">$INFO[Container(655).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(profiles)">$LOCALIZE[13200]</value>
        <value condition="Window.IsActive(systeminfo)">$INFO[Control.GetLabel(52)]</value>
        <value condition="Window.IsActive(favourites)">$INFO[Container(450).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(filemanager) + [Control.HasFocus(20) | Control.HasFocus(30)]">$INFO[Container(20).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(filemanager) + [Control.HasFocus(21) | Control.HasFocus(31)]">$INFO[Container(21).NumItems,, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(script-globalsearch-main.xml)">$LOCALIZE[31186] "$INFO[Window.Property(GlobalSearch.SearchString)]"</value>
        <value condition="Window.IsActive(script-script.extendedinfo-VideoList.xml) | Window.IsActive(script-script.extendedinfo-YouTubeList.xml)">$INFO[Window.Property(TotalItems),, $LOCALIZE[31025]]</value>
        <value condition="Window.IsActive(programsettings)">$LOCALIZE[0]</value>
        <value condition="Window.IsActive(systemsettings)">$LOCALIZE[13000]</value>
        <value condition="Window.IsActive(servicesettings)">$LOCALIZE[13279]</value>
        <value condition="Window.IsActive(pvrsettings)">$LOCALIZE[19020]</value>
        <value condition="Window.IsActive(skinsettings)">$LOCALIZE[166]</value>
        <value condition="Window.IsActive(playersettings)">$LOCALIZE[16003]</value>
        <value condition="Window.IsActive(mediasettings)">$LOCALIZE[14211]</value>
        <value condition="Window.IsActive(interfacesettings)">$LOCALIZE[14206]</value>
        <value condition="Window.IsActive(settings)">$INFO[System.FriendlyName]</value>
        <value condition="Window.IsActive(home) + Window.IsVisible(virtualkeyboard)">$LOCALIZE[137]</value>
        <value condition="Window.IsActive(home) + Window.IsVisible(shutdownmenu)">$LOCALIZE[13005]</value>
        <value condition="Window.IsActive(home) + Window.IsVisible(busydialog)">$LOCALIZE[503]</value>
        <value condition="Window.IsActive(home)">$VAR[LibraryStatsVar]</value>
        <value condition="!Window.IsActive(movieinformation) + !Window.IsActive(DialogMusicInfo.xml) + !Window.IsActive(script-script.extendedinfo-DialogInfo.xml)">$INFO[Container.CurrentItem,, $LOCALIZE[1443] ]$INFO[Container.NumItems,, $LOCALIZE[31025]]</value>
        <value>$LOCALIZE[14116]</value>
    </variable>
    <variable name="ThumbViewImage">
        <value condition="Container.Content(studios)">$INFO[ListItem.Label,resource://resource.images.studios.squarehd/,.jpg]</value>
        <value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
        <value condition="Container.Content(directors)">DefaultDirector.png</value>
        <value condition="Container.Content(years)">DefaultYear.png</value>
        <value condition="Window.IsActive(music) + Container.Content(genres)">DefaultMusicGenres.png</value>
        <value condition="Window.IsActive(videos) + Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/videogenre/,.png]</value>
        <value condition="Window.IsActive(videos) + Container.Content(countries) + System.HasAddon(resource.images.moviecountryicons.maps)">$INFO[ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</value>
        <value condition="Skin.HasSetting(Enable.ThumbnailFanart) + !String.IsEmpty(ListItem.Art(fanart)) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(sets)]">$INFO[ListItem.Art(fanart)]</value>
        <value condition="Skin.HasSetting(Enable.ThumbnailLandscape) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="Skin.HasSetting(Enable.ThumbnailLogo) + !String.IsEmpty(ListItem.Art(clearlogo)) + [Container.Content(movies) | Container.Content(tvshows)]">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="ListIcon">
        <value condition="Container.Content(studios)">$INFO[ListItem.Label,resource://resource.images.studios.squarehd/,.jpg]</value>
        <value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
        <value condition="Container.Content(directors)">DefaultDirector.png</value>
        <value condition="Container.Content(years)">DefaultYear.png</value>
        <value condition="Window.IsActive(music) + Container.Content(genres)">DefaultMusicGenres.png</value>
        <value condition="Window.IsActive(videos) + Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/videogenre/,.png]</value>
        <value condition="Window.IsActive(videos) + Container.Content(countries) + System.HasAddon(resource.images.moviecountryicons.maps)">$INFO[ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="TopbarFadeLabel1">
        <value condition="VideoPlayer.Content(episodes) + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">$INFO[VideoPlayer.Season]$INFO[VideoPlayer.Episode,X,. ]$INFO[Player.Title]</value>

        <value condition="VideoPlayer.Content(episodes) + Window.IsVisible(extendedprogressdialog) + [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">$INFO[VideoPlayer.Season]$INFO[VideoPlayer.Episode,X,. ]$INFO[Player.Title]</value>

        <value condition="[Player.Playing | Player.HasAudio | Player.HasVideo] + Window.IsVisible(extendedprogressdialog) + [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">$INFO[Player.Title]</value>

        <value condition="[Player.Playing | Player.HasAudio | Player.HasVideo] + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">$INFO[Player.Title]</value>

        <value condition="![Player.Playing | Player.HasAudio | Player.HasVideo] + !IsEmpty(Weather.Plugin) + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">[LOWERCASE]$INFO[System.Time][/LOWERCASE]</value>

        <value condition="![Player.Playing | Player.HasAudio | Player.HasVideo] + IsEmpty(Weather.Plugin) + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">[LOWERCASE]$INFO[System.Time][/LOWERCASE]</value>

        <value condition="![Player.Playing | Player.HasAudio | Player.HasVideo] + !IsEmpty(Weather.Plugin) + Window.IsVisible(extendedprogressdialog) +  [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">[LOWERCASE]$INFO[System.Time][/LOWERCASE]</value>

        <value condition="![Player.Playing | Player.HasAudio | Player.HasVideo] + IsEmpty(Weather.Plugin) + Window.IsVisible(extendedprogressdialog) +  [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">[LOWERCASE]$INFO[System.Time][/LOWERCASE]</value>
    </variable>
    <variable name="TopbarFadeLabel2">
        <value condition="VideoPlayer.Content(livetv) + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">$INFO[VideoPlayer.ChannelNumber,,: ]$INFO[VideoPlayer.ChannelName]</value>

        <value condition="VideoPlayer.Content(livetv) + Window.IsVisible(extendedprogressdialog) + [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">$INFO[VideoPlayer.ChannelNumber,,: ]$INFO[VideoPlayer.ChannelName]</value>

        <value condition="VideoPlayer.Content(episodes) + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">$INFO[VideoPlayer.Premiered,, • ]$INFO[VideoPlayer.TvShowTitle]</value>

        <value condition="VideoPlayer.Content(episodes) + Window.IsVisible(extendedprogressdialog) + [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">$INFO[VideoPlayer.Premiered,, • ]$INFO[VideoPlayer.TvShowTitle]</value>

        <value condition="VideoPlayer.Content(movies) + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">$INFO[VideoPlayer.Year]$INFO[VideoPlayer.Genre, • ]</value>

        <value condition="VideoPlayer.Content(movies) + Window.IsVisible(extendedprogressdialog) + [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">$INFO[VideoPlayer.Year]$INFO[VideoPlayer.Genre, • ]</value>

        <value condition="VideoPlayer.Content(musicvideos) + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">$INFO[VideoPlayer.Artist]</value>

        <value condition="VideoPlayer.Content(musicvideos) + Window.IsVisible(extendedprogressdialog) + [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">$INFO[VideoPlayer.Artist]</value>

        <value condition="Player.HasAudio + !String.IsEmpty(MusicPlayer.Artist) + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">$INFO[MusicPlayer.Artist]$INFO[MusicPlayer.Album, • ]</value>

        <value condition="Player.HasAudio + !String.IsEmpty(MusicPlayer.Artist) + Window.IsVisible(extendedprogressdialog) + [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">$INFO[MusicPlayer.Artist]$INFO[MusicPlayer.Album, • ]</value>

        <value condition="!String.IsEmpty(Player.Title) + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">$INFO[Player.Time] / $INFO[Player.Duration]</value>

        <value condition="!String.IsEmpty(Player.Title) + Window.IsVisible(extendedprogressdialog) + [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">$INFO[Player.Time] / $INFO[Player.Duration]</value>

        <value condition="![Player.Playing | Player.HasAudio | Player.HasVideo] + [!Window.IsVisible(extendedprogressdialog) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(script-globalsearch-infodialog.xml) | Window.IsVisible(favourites)]">$INFO[System.Date]</value>

        <value condition="![Player.Playing | Player.HasAudio | Player.HasVideo] + Window.IsVisible(extendedprogressdialog) + [Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]">$INFO[System.Date]</value>
    </variable>
    <variable name="AddonDisclaimer">
        <value condition="!String.IsEmpty(ListItem.AddonDisclaimer)">[COLOR highlight]$LOCALIZE[24052]: [/COLOR][CR]$INFO[ListItem.AddonDisclaimer]</value>
    </variable>
    <variable name="AddonNews">
        <value condition="!String.IsEmpty(ListItem.AddonNews)">[COLOR highlight]$LOCALIZE[24054]: [/COLOR][CR]$INFO[ListItem.AddonNews][CR]</value>
    </variable>
    <variable name="LibraryStatsVar">
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31097])">$LOCALIZE[20342]: $INFO[Window(Home).Property(Movies.Count)] • $LOCALIZE[16102]: $INFO[Window(Home).Property(Movies.Watched)] • $LOCALIZE[16101]: $INFO[Window(Home).Property(Movies.UnWatched)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31098])">$LOCALIZE[20343]: $INFO[Window(Home).Property(TVShows.Count)] • $LOCALIZE[20360]: $INFO[Window(Home).Property(Episodes.Count)] • $LOCALIZE[16101]: $INFO[Window(Home).Property(Episodes.UnWatched)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31099])">$LOCALIZE[133]: $INFO[Window(Home).Property(Music.ArtistsCount)] • $LOCALIZE[132]: $INFO[Window(Home).Property(Music.AlbumsCount)] • $LOCALIZE[134]: $INFO[Window(Home).Property(Music.SongsCount)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31058]) + PVR.IsRecording">$LOCALIZE[19158]: $INFO[PVR.NowRecordingDateTime] • $INFO[PVR.NowRecordingTitle] ($INFO[PVR.NowRecordingChannel])</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31058]) + PVR.HasNonRecordingTimer">$LOCALIZE[19157]: $INFO[PVR.NextRecordingDateTime] • $LOCALIZE[19029]: $INFO[PVR.NextRecordingTitle] ($INFO[PVR.NextRecordingChannel])</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31058])">$LOCALIZE[19019]: $INFO[Pvr.BackendChannels] • $LOCALIZE[19163]: $INFO[Pvr.BackendRecordings]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[20088])">$INFO[Weather.Location]: $INFO[Weather.Conditions]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31082])">$LOCALIZE[20389]: $INFO[Window(Home).Property(MusicVideos.Count)] • $LOCALIZE[16102]: $INFO[Window(Home).Property(MusicVideos.Watched)] • $LOCALIZE[16101]: $INFO[Window(Home).Property(MusicVideos.UnWatched)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[130])">$LOCALIZE[31309] $INFO[System.memory(used.percent)] • $LOCALIZE[13271] $INFO[System.CPUUsage]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31130])">$LOCALIZE[20342]: $INFO[Window(Home).Property(PlaylistCount)] • $LOCALIZE[16102]: $INFO[Window(Home).Property(PlaylistWatched)] • $LOCALIZE[16101]: $INFO[Window(Home).Property(PlaylistUnWatched)] • $LOCALIZE[575]: $INFO[Window(Home).Property(PlaylistInProgress)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31131])">$LOCALIZE[20343]: $INFO[Window(Home).Property(PlaylistTVShowCount)] • $LOCALIZE[20360]: $INFO[Window(Home).Property(PlaylistEpisodes)] • $LOCALIZE[16101]: $INFO[Window(Home).Property(PlaylistEpisodesUnWatched)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(InfoLine),$LOCALIZE[31132])">$LOCALIZE[20389]: $INFO[Window(Home).Property(PlaylistCount)] • $LOCALIZE[16102]: $INFO[Window(Home).Property(PlaylistWatched)] • $LOCALIZE[16101]: $INFO[Window(Home).Property(PlaylistUnWatched)] • $LOCALIZE[575]: $INFO[Window(Home).Property(PlaylistInProgress)]</value>
        <value>$INFO[Container(9000).ListItem.Label]</value>
    </variable>
    <variable name="WidgetNameLabelVar">
        <value condition="!String.IsEqual(Container(9000).ListItem.Property(widgetName),weather)">$INFO[Container(9000).ListItem.Property(widgetName)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetName),weather) + !Weather.IsFetched">$LOCALIZE[31909]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetName),weather) + Weather.IsFetched">$INFO[Window(Weather).Property(WeatherProvider)]</value>
    </variable>
    <variable name="Settings.Viewmode">
        <value condition="Skin.HasSetting(Enable.SettingsPanelView)">$LOCALIZE[21371]</value>
        <value condition="!Skin.HasSetting(Enable.SettingsPanelView)">$LOCALIZE[535]</value>
    </variable>
    <variable name="LowPanelLogoVar">
        <value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value>blank.png</value>
    </variable>
    <variable name="WidgetArt">
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widget),myplaylists)">DefaultPlaylist.png</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20021]) + String.Contains(Container(9000).ListItem.Property(widgetPath),advanced.emulator.launcher)">$INFO[ListItem.Thumb]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20021]) + String.StartsWith(Container(9000).ListItem.Property(widgetPath),pvr)">$INFO[ListItem.ActualIcon]</value>
        <value condition="String.StartsWith(Container(9000).ListItem.Property(widgetPath),videodb://movies/genres/) | String.StartsWith(Container(9000).ListItem.Property(widgetPath),library://video/movies/genres.xml) | String.StartsWith(Container(9000).ListItem.Property(widgetPath),videodb://tvshows/genres/) | String.StartsWith(Container(9000).ListItem.Property(widgetPath),library://video/tvshows/genres.xml)">$INFO[ListItem.Label,special://skin/extras/videogenre/,.png]</value>
        <value condition="System.HasAddon(resource.images.moviecountryicons.maps) + [String.StartsWith(Container(9000).ListItem.Property(widgetPath),videodb://movies/country/) | String.StartsWith(Container(9000).ListItem.Property(widgetPath),library://video/movies/country.xml) | String.StartsWith(Container(9000).ListItem.Property(widgetPath),videodb://tvshows/country/) | String.StartsWith(Container(9000).ListItem.Property(widgetPath),library://video/tvshows/country.xml)]">$INFO[ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[21371]) | String.IsEmpty(Container(9000).ListItem.Property(widgetIcon))">$INFO[ListItem.Icon]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20021]) + [String.IsEqual(Container(9000).ListItem.Property(widgetType),episodes) | String.IsEqual(Container(9000).ListItem.Property(widgetType),tvshows)] + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20021]) + !String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20021]) + String.IsEmpty(ListItem.Art(thumb))">DefaultFallbackMovies.png</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[20445]) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31100]) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetIcon),$LOCALIZE[31088]) + !String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="MusicInfoDescription">
        <value condition="String.IsEqual(ListItem.DBTYPE,artist) + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="[String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,song)] + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,artist) + String.IsEmpty(ListItem.Property(Artist_Description))">$LOCALIZE[547]</value>
        <value condition="[String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,song)] + String.IsEmpty(ListItem.Property(Album_Description))">$LOCALIZE[414]</value>
        <value>$LOCALIZE[547]</value>
    </variable>
    <!--variable name="MusicInfoYoutubePath">
        <value condition="String.IsEqual(ListItem.DBTYPE,artist)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Artist] $LOCALIZE[2]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,album)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Artist] $ESCINFO[ListItem.Label] $LOCALIZE[558]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,song)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Artist] $ESCINFO[ListItem.Title]</value>
    </variable-->
    <!--variable name="VideoInfoYoutubePath">
        <value condition="String.IsEqual(ListItem.DBTYPE,movie)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Title] $LOCALIZE[20338] $LOCALIZE[20410]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,tvshow)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Title] $LOCALIZE[20364]</value>
        <value condition="String.IsEqual(ListItem.DBTYPE,episode)">plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.TVShowTitle] $LOCALIZE[20364]</value>
        <value>plugin://script.extendedinfo?info=youtubesearchvideos&amp;&amp;id=$ESCINFO[ListItem.Label]</value>
    </variable-->
    <variable name="StarRatingVar">
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,0)">starrating/0.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,1)">starrating/1.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,2)">starrating/2.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,3)">starrating/3.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,4)">starrating/4.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,5)">starrating/5.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,6)">starrating/6.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,7)">starrating/7.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,8)">starrating/8.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,9)">starrating/9.png</value>
        <value condition="!String.IsEmpty(ListItem.UserRating) + Integer.IsEqual(ListItem.UserRating,10)">starrating/10.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,0)">starrating/0.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,1)">starrating/1.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,2)">starrating/2.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,3)">starrating/3.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,4)">starrating/4.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,5)">starrating/5.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,6)">starrating/6.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,7)">starrating/7.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,8)">starrating/8.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,9)">starrating/9.png</value>
        <value condition="Window.IsActive(videos) + Integer.IsLessOrEqual(ListItem.Rating,10)">starrating/10.png</value>
        <value condition="Window.IsActive(music) + Integer.IsLessOrEqual(ListItem.Rating,0)">starrating/0.png</value>
        <value condition="Window.IsActive(music) + Integer.IsLess(ListItem.Rating,1)">starrating/1.png</value>
        <value condition="Window.IsActive(music) + Integer.IsEqual(ListItem.Rating,1)">starrating/2.png</value>
        <value condition="Window.IsActive(music) + Integer.IsLess(ListItem.Rating,2)">starrating/3.png</value>
        <value condition="Window.IsActive(music) + Integer.IsEqual(ListItem.Rating,2)">starrating/4.png</value>
        <value condition="Window.IsActive(music) + Integer.IsLess(ListItem.Rating,3)">starrating/5.png</value>
        <value condition="Window.IsActive(music) + Integer.IsEqual(ListItem.Rating,3)">starrating/6.png</value>
        <value condition="Window.IsActive(music) + Integer.IsLess(ListItem.Rating,4)">starrating/7.png</value>
        <value condition="Window.IsActive(music) + Integer.IsEqual(ListItem.Rating,4)">starrating/8.png</value>
        <value condition="Window.IsActive(music) + Integer.IsLess(ListItem.Rating,5)">starrating/9.png</value>
        <value condition="Window.IsActive(music) + Integer.IsEqual(ListItem.Rating,5)">starrating/10.png</value>

    </variable>
    <variable name="StarRatingPlayerVar">
        <value condition="String.IsEmpty(MusicPlayer.UserRating) | Integer.IsLess(MusicPlayer.UserRating,1)">starrating/0.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,1)">starrating/1.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,2)">starrating/2.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,3)">starrating/3.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,4)">starrating/4.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,5)">starrating/5.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,6)">starrating/6.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,7)">starrating/7.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,8)">starrating/8.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,9)">starrating/9.png</value>
        <value condition="Integer.IsEqual(MusicPlayer.UserRating,10)">starrating/10.png</value>
    </variable>
    <variable name="WidgetThumbnailLabel">
        <value condition="String.Contains(Container(9000).ListItem.Property(widgetPath),recentlyaddedepisodes)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
        <value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    <variable name="WidgetThumbnailLabel2">
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetType),tvshows) + !String.IsEmpty(ListItem.Property(WatchedEpisodes))">$INFO[ListItem.Property(WatchedEpisodes)]$INFO[ListItem.Property(TotalEpisodes), / ]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widgetType),movies) | String.IsEqual(Container(9000).ListItem.Property(widgetType),musicvideos)">$INFO[ListItem.Year]</value>
        <value condition="String.Contains(Container(9000).ListItem.Property(widgetPath),recentlyaddedepisodes) + !String.IsEmpty(ListItem.Premiered)">$INFO[ListItem.Premiered]</value>
    </variable>
    <variable name="AdvancedLauncherPlotVar">
        <value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value>$LOCALIZE[15063].</value>
    </variable>
    <variable name="MenuOrientationVar">
        <value condition="Skin.HasSetting(Enable.HorizontalMenu)">Horizontal</value>
        <value>Vertical</value>
    </variable>
    <variable name="VolumeIconVar">
        <value condition="Integer.IsGreater(Control.GetLabel(29999),66)">k</value>
        <value condition="Integer.IsGreater(Control.GetLabel(29999),33)">l</value>
        <value condition="player.passthrough">w</value>
        <value condition="Player.Muted">m</value>
        <value>v</value>
    </variable>
    <variable name="InfoWallSubLabelVar">
        <value condition="!String.IsEmpty(ListItem.Genre)">$INFO[ListItem.Genre]</value>
        <value>$INFO[ListItem.Label2]</value>
    </variable>
    <variable name="videohwdecoder">
        <value condition="Player.Process(videohwdecoder)">$LOCALIZE[31257]</value>
        <value>$LOCALIZE[31258]</value>
    </variable>
    <variable name="ProfileIconVar">
        <value condition="String.IsEqual(ListItem.Label,$LOCALIZE[20058])">DefaultAddonSource.png</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="HomeEmptyLibrary">
        <value condition="String.IsEqual(Container(9000).ListItem.Property(defaultID),movies) + !Library.HasContent(Movies)">$LOCALIZE[31273]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(defaultID),tvshows) + !Library.HasContent(TVShows)">$LOCALIZE[31273]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(defaultID),music) + !Library.HasContent(Music)">$LOCALIZE[31273]</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(defaultID),musicvideos) + !Library.HasContent(MusicVideos)">$LOCALIZE[31273]</value>
        <!--<value condition="String.IsEqual(Container(9000).ListItem.Property(defaultID),favorites) + !Integer.IsGreater(Window(favourites).Container(450).NumItems,0)">No favourites found. You can add any item from media views to this list by using the context menu.</value>-->
        <value condition="String.IsEqual(Container(9000).ListItem.Property(defaultID),weather) + IsEmpty(Weather.Plugin)">$LOCALIZE[31274]</value>
    </variable>
    <variable name="CommonBackgroundOverlay">
        <value condition="!String.IsEmpty(Skin.String(CustomOverlay))">$INFO[Skin.String(CustomOverlay)]</value>
        <value>background.png</value>
    </variable>
    <variable name="MusicVizBackground">
        <value condition="String.IsEqual(Skin.String(musicvis.background),fanart) + !Skin.HasSetting(HideVisualizationFanart)">$INFO[Player.Art(fanart)]</value>
        <value condition="String.IsEqual(Skin.String(musicvis.background),bluralbum) + !Skin.HasSetting(HideVisualizationFanart)">$INFO[Window(home).Property(ImageFilter1)]</value>
        <value condition="String.IsEqual(Skin.String(musicvis.background),pixelfanart) + !Skin.HasSetting(HideVisualizationFanart)">$INFO[Window(home).Property(ImageFilterfa2)]</value>
        <value condition="String.IsEqual(Skin.String(musicvis.background),posterizefanart) + !Skin.HasSetting(HideVisualizationFanart)">$INFO[Window(home).Property(ImageFilterfa3)]</value>
    </variable>
    <variable name="ListRightLabel">
        <value condition="Container.Content(tvshows)">$INFO[ListItem.Rating]</value>
        <value condition="!Container.Content(albums) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
    </variable>
</includes>
